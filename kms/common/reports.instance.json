{
  "queries": [
    "worth means price times quantity"
  ],
  "resultss": [
    {
      "hierarchy": [
        [
          "a",
          "articlePOS"
        ],
        [
          "action",
          "action"
        ],
        [
          "articlePOS",
          "articlePOS"
        ],
        [
          "ascending",
          "ordering"
        ],
        [
          "canBeQuestion",
          "canBeQuestion"
        ],
        [
          "changeable",
          "changeable"
        ],
        [
          "changes",
          "event"
        ],
        [
          "changes",
          "verby"
        ],
        [
          "column",
          "toAble"
        ],
        [
          "column",
          "to_after_column_toAble"
        ],
        [
          "descending",
          "ordering"
        ],
        [
          "describe",
          "verby"
        ],
        [
          "direction",
          "direction"
        ],
        [
          "event",
          "event"
        ],
        [
          "ifAble",
          "ifAble"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "isEd",
          "isEd"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "it",
          "report"
        ],
        [
          "it",
          "toAble"
        ],
        [
          "left",
          "direction"
        ],
        [
          "minus",
          "number"
        ],
        [
          "minus",
          "queryable"
        ],
        [
          "move",
          "reportAction"
        ],
        [
          "notAble",
          "notAble"
        ],
        [
          "number",
          "queryable"
        ],
        [
          "orAble",
          "ifAble"
        ],
        [
          "ordering",
          "ordering"
        ],
        [
          "plus",
          "number"
        ],
        [
          "plus",
          "queryable"
        ],
        [
          "price",
          "number"
        ],
        [
          "price",
          "property"
        ],
        [
          "product",
          "the_after_product_property_theAble"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "property",
          "the_after_product_property_theAble"
        ],
        [
          "quantity",
          "number"
        ],
        [
          "quantity",
          "property"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "questionMark",
          "isEd"
        ],
        [
          "remove",
          "reportAction"
        ],
        [
          "report",
          "changeable"
        ],
        [
          "report",
          "theAble"
        ],
        [
          "reportAction",
          "reportAction"
        ],
        [
          "right",
          "direction"
        ],
        [
          "show",
          "action"
        ],
        [
          "the",
          "articlePOS"
        ],
        [
          "theAble",
          "the_after_product_property_theAble"
        ],
        [
          "the_after_product_property_theAble",
          "the_after_product_property_theAble"
        ],
        [
          "times",
          "number"
        ],
        [
          "times",
          "queryable"
        ],
        [
          "toAble",
          "to_after_column_toAble"
        ],
        [
          "to_after_column_toAble",
          "to_after_column_toAble"
        ],
        [
          "unknown",
          "notAble"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "verby",
          "verby"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "whatAble",
          "queryable"
        ]
      ],
      "logs": [
        "Undefined word 'worth'",
        "Op choices were: [(('unknown', 0), [('means', 0), ('price', 0), ('quantity', 0), ('times', 0), ('unknown', 0)]), (('price', 0), [('means', 0), ('price', 0), ('quantity', 0), ('times', 0), ('unknown', 1)]), (('quantity', 0), [('means', 0), ('quantity', 0), ('times', 0), ('unknown', 1)]), (('times', 0), [('means', 0), ('times', 0), ('unknown', 1)]), (('unknown', 1), [('means', 0), ('unknown', 1)]), (('means', 0), [('means', 0)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['means', 0], ['price', 0], ['quantity', 0], ['times', 0], ['unknown', 0]]\n  Context for choosing the operator price/0 was [['means', 0], ['price', 0], ['quantity', 0], ['times', 0], ['unknown', 1]]\n  Context for choosing the operator quantity/0 was [['means', 0], ['quantity', 0], ['times', 0], ['unknown', 1]]\n  Context for choosing the operator times/0 was [['means', 0], ['times', 0], ['unknown', 1]]\n  Context for choosing the operator unknown/1 was [['means', 0], ['unknown', 1]]\n  Context for choosing the operator means/0 was [['means', 0]]",
        "",
        "Semantic            No semantic applied                                                                       \n          TO        (HASHCODE 1954756111)                                                                     \n                    {                                                                                         \n                      \"controlRemove\": true,                                                                  \n                      \"marker\": \"controlStart\",                                                               \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'meta' ordinal: 2  notes: \"from means to where from is unknown\"                        \n          APPLIED   Semantic(({context}) => context.marker == 'means' && context.from.marker == 'unknown', ({c\n                    onfig, context, km, isTest}) => {                                                         \n                            if (isTest) {                                                                     \n                              return                                                                          \n                            } else {                                                                          \n                              km(\"dialogues\").api.setVariable(context.from.value, context.to.value)           \n                            }                                                                                 \n                          })                                                                                  \n          TO        (HASHCODE 914140928)                                                                      \n                    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"from\": {                                                                               \n                        \"marker\": \"unknown\",                                                                  \n                        \"text\": \"worth\",                                                                      \n                        \"unknown\": true,                                                                      \n                        \"value\": \"worth\",                                                                     \n                        \"word\": \"worth\"                                                                       \n                      },                                                                                      \n                      \"marker\": \"means\",                                                                      \n                      \"text\": \"worth means price times quantity\",                                             \n                      \"to\": {                                                                                 \n                        \"default\": true,                                                                      \n                        \"marker\": \"times\",                                                                    \n                        \"number\": \"one\",                                                                      \n                        \"text\": \"price times quantity\",                                                       \n                        \"word\": \"times\",                                                                      \n                        \"x\": {                                                                                \n                          \"default\": true,                                                                    \n                          \"marker\": \"price\",                                                                  \n                          \"text\": \"price\",                                                                    \n                          \"types\": [                                                                          \n                            \"price\"                                                                           \n                          ],                                                                                  \n                          \"word\": \"price\"                                                                     \n                        },                                                                                    \n                        \"y\": {                                                                                \n                          \"default\": true,                                                                    \n                          \"marker\": \"quantity\",                                                               \n                          \"text\": \"quantity\",                                                                 \n                          \"types\": [                                                                          \n                            \"quantity\"                                                                        \n                          ],                                                                                  \n                          \"word\": \"quantity\"                                                                  \n                        }                                                                                     \n                      },                                                                                      \n                      \"topLevel\": true,                                                                       \n                      \"word\": \"means\"                                                                         \n                    }                                                                                         \n          STACK     Context#0: call2                                                                          \n          RESULT    (HASHCODE 1888831281)                                                                     \n                    {                                                                                         \n                      \"word\": \"means\",                                                                        \n                      \"marker\": \"means\",                                                                      \n                      \"text\": \"worth means price times quantity\",                                             \n                      \"to\": {                                                                                 \n                        \"word\": \"times\",                                                                      \n                        \"marker\": \"times\",                                                                    \n                        \"text\": \"price times quantity\",                                                       \n                        \"number\": \"one\",                                                                      \n                        \"y\": {                                                                                \n                          \"word\": \"quantity\",                                                                 \n                          \"marker\": \"quantity\",                                                               \n                          \"text\": \"quantity\",                                                                 \n                          \"types\": [                                                                          \n                            \"quantity\"                                                                        \n                          ],                                                                                  \n                          \"default\": true                                                                     \n                        },                                                                                    \n                        \"default\": true,                                                                      \n                        \"x\": {                                                                                \n                          \"word\": \"price\",                                                                    \n                          \"marker\": \"price\",                                                                  \n                          \"text\": \"price\",                                                                    \n                          \"types\": [                                                                          \n                            \"price\"                                                                           \n                          ],                                                                                  \n                          \"default\": true                                                                     \n                        }                                                                                     \n                      },                                                                                      \n                      \"from\": {                                                                               \n                        \"word\": \"worth\",                                                                      \n                        \"marker\": \"unknown\",                                                                  \n                        \"text\": \"worth\",                                                                      \n                        \"value\": \"worth\",                                                                     \n                        \"unknown\": true                                                                       \n                      },                                                                                      \n                      \"default\": true,                                                                        \n                      \"topLevel\": true,                                                                       \n                      \"touchedBy\": [                                                                          \n                        \"call2\"                                                                               \n                      ]                                                                                       \n                    }                                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 34  notes: \"show word\"                                            \n          APPLIED   Generator(({context}) => context.word, ({context}) => context.word)                       \n          RESULT    means                                                                                     \n          STACK     Context#0: call3                                                                          \n          TO        (HASHCODE 715168984)                                                                      \n                    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"from\": {                                                                               \n                        \"marker\": \"unknown\",                                                                  \n                        \"text\": \"worth\",                                                                      \n                        \"unknown\": true,                                                                      \n                        \"value\": \"worth\",                                                                     \n                        \"word\": \"worth\"                                                                       \n                      },                                                                                      \n                      \"isResponse\": true,                                                                     \n                      \"marker\": \"means\",                                                                      \n                      \"text\": \"worth means price times quantity\",                                             \n                      \"to\": {                                                                                 \n                        \"default\": true,                                                                      \n                        \"marker\": \"times\",                                                                    \n                        \"number\": \"one\",                                                                      \n                        \"text\": \"price times quantity\",                                                       \n                        \"word\": \"times\",                                                                      \n                        \"x\": {                                                                                \n                          \"default\": true,                                                                    \n                          \"marker\": \"price\",                                                                  \n                          \"text\": \"price\",                                                                    \n                          \"types\": [                                                                          \n                            \"price\"                                                                           \n                          ],                                                                                  \n                          \"word\": \"price\"                                                                     \n                        },                                                                                    \n                        \"y\": {                                                                                \n                          \"default\": true,                                                                    \n                          \"marker\": \"quantity\",                                                               \n                          \"text\": \"quantity\",                                                                 \n                          \"types\": [                                                                          \n                            \"quantity\"                                                                        \n                          ],                                                                                  \n                          \"word\": \"quantity\"                                                                  \n                        }                                                                                     \n                      },                                                                                      \n                      \"topLevel\": true,                                                                       \n                      \"touchedBy\": [                                                                          \n                        \"call2\"                                                                               \n                      ],                                                                                      \n                      \"word\": \"means\"                                                                         \n                    }                                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else if (context.value) {                                                       \n                              JSON.stringify(context.value)                                                   \n                            } else {                                                                          \n                              return context.word                                                             \n                            }                                                                                 \n                          })                                                                                  \n          RESULT    worth                                                                                     \n          STACK     Context#0: call4,call5                                                                    \n          TO        (HASHCODE -1739067561)                                                                    \n                    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"paraphrase\": true,                                                                     \n                      \"text\": \"worth\",                                                                        \n                      \"unknown\": true,                                                                        \n                      \"value\": \"worth\",                                                                       \n                      \"word\": \"worth\"                                                                         \n                    }                                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else if (context.value) {                                                       \n                              JSON.stringify(context.value)                                                   \n                            } else {                                                                          \n                              return context.word                                                             \n                            }                                                                                 \n                          })                                                                                  \n          RESULT    worth                                                                                     \n          STACK     Context#0: call4,call6                                                                    \n          TO        (HASHCODE -1739067561)                                                                    \n                    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"paraphrase\": true,                                                                     \n                      \"text\": \"worth\",                                                                        \n                      \"unknown\": true,                                                                        \n                      \"value\": \"worth\",                                                                       \n                      \"word\": \"worth\"                                                                         \n                    }                                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 30  notes: \"show the input word\"                                  \n          APPLIED   Generator(({context}) => context.paraphrase && context.word, ({context}) => `${context.wor\n                    d}`)                                                                                      \n          RESULT    price                                                                                     \n          STACK     Context#0: call4,call7,call8                                                              \n          TO        (HASHCODE -1373497424)                                                                    \n                    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"price\",                                                                      \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false,                                                                      \n                      \"text\": \"price\",                                                                        \n                      \"types\": [                                                                              \n                        \"price\"                                                                               \n                      ],                                                                                      \n                      \"word\": \"price\"                                                                         \n                    }                                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 30  notes: \"show the input word\"                                  \n          APPLIED   Generator(({context}) => context.paraphrase && context.word, ({context}) => `${context.wor\n                    d}`)                                                                                      \n          RESULT    quantity                                                                                  \n          STACK     Context#0: call4,call7,call9                                                              \n          TO        (HASHCODE -1827955238)                                                                    \n                    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"quantity\",                                                                   \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false,                                                                      \n                      \"text\": \"quantity\",                                                                     \n                      \"types\": [                                                                              \n                        \"quantity\"                                                                            \n                      ],                                                                                      \n                      \"word\": \"quantity\"                                                                      \n                    }                                                                                         \n",
        "Generator                                                                                                     \n          APPLIED   Generator(({context}) => bridge.id == context.marker && context.paraphrase, (args) => brid\n                    ge.generatorp(args))                                                                      \n          RESULT    price times quantity                                                                      \n          STACK     Context#0: call4,call7                                                                    \n          TO        (HASHCODE -1313080493)                                                                    \n                    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"times\",                                                                      \n                      \"number\": \"one\",                                                                        \n                      \"paraphrase\": true,                                                                     \n                      \"text\": \"price times quantity\",                                                         \n                      \"word\": \"times\",                                                                        \n                      \"x\": {                                                                                  \n                        \"default\": true,                                                                      \n                        \"marker\": \"price\",                                                                    \n                        \"text\": \"price\",                                                                      \n                        \"types\": [                                                                            \n                          \"price\"                                                                             \n                        ],                                                                                    \n                        \"word\": \"price\"                                                                       \n                      },                                                                                      \n                      \"y\": {                                                                                  \n                        \"default\": true,                                                                      \n                        \"marker\": \"quantity\",                                                                 \n                        \"text\": \"quantity\",                                                                   \n                        \"types\": [                                                                            \n                          \"quantity\"                                                                          \n                        ],                                                                                    \n                        \"word\": \"quantity\"                                                                    \n                      }                                                                                       \n                    }                                                                                         \n",
        "Generator           KM 'meta' ordinal: 1                                                                      \n          APPLIED   Generator(({context}) => context.marker == 'means' && context.paraphrase, ({context, g}) =\n                    > {                                                                                       \n                            // const before = g({ ...context.from, paraphrase: true, debug: true})            \n                            const before = g({ ...context.from, paraphrase: true})                            \n                            return `${g({ ...context.from, paraphrase: true})} means ${g(context.to)}`        \n                          })                                                                                  \n          RESULT    worth means price times quantity                                                          \n          STACK     Context#0: call4                                                                          \n          TO        (HASHCODE -1186727972)                                                                    \n                    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"from\": {                                                                               \n                        \"marker\": \"unknown\",                                                                  \n                        \"text\": \"worth\",                                                                      \n                        \"unknown\": true,                                                                      \n                        \"value\": \"worth\",                                                                     \n                        \"word\": \"worth\"                                                                       \n                      },                                                                                      \n                      \"marker\": \"means\",                                                                      \n                      \"paraphrase\": true,                                                                     \n                      \"text\": \"worth means price times quantity\",                                             \n                      \"to\": {                                                                                 \n                        \"default\": true,                                                                      \n                        \"marker\": \"times\",                                                                    \n                        \"number\": \"one\",                                                                      \n                        \"text\": \"price times quantity\",                                                       \n                        \"word\": \"times\",                                                                      \n                        \"x\": {                                                                                \n                          \"default\": true,                                                                    \n                          \"marker\": \"price\",                                                                  \n                          \"text\": \"price\",                                                                    \n                          \"types\": [                                                                          \n                            \"price\"                                                                           \n                          ],                                                                                  \n                          \"word\": \"price\"                                                                     \n                        },                                                                                    \n                        \"y\": {                                                                                \n                          \"default\": true,                                                                    \n                          \"marker\": \"quantity\",                                                               \n                          \"text\": \"quantity\",                                                                 \n                          \"types\": [                                                                          \n                            \"quantity\"                                                                        \n                          ],                                                                                  \n                          \"word\": \"quantity\"                                                                  \n                        }                                                                                     \n                      },                                                                                      \n                      \"topLevel\": true,                                                                       \n                      \"touchedBy\": [                                                                          \n                        \"call2\"                                                                               \n                      ],                                                                                      \n                      \"word\": \"means\"                                                                         \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        (HASHCODE 1596017032)                                                                     \n                    {                                                                                         \n                      \"controlRemove\": true,                                                                  \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "means",
                0
              ],
              [
                "price",
                0
              ],
              [
                "quantity",
                0
              ],
              [
                "times",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          },
          {
            "op": [
              "price",
              0
            ],
            "ops": [
              [
                "means",
                0
              ],
              [
                "price",
                0
              ],
              [
                "quantity",
                0
              ],
              [
                "times",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "quantity",
              0
            ],
            "ops": [
              [
                "means",
                0
              ],
              [
                "quantity",
                0
              ],
              [
                "times",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "times",
              0
            ],
            "ops": [
              [
                "means",
                0
              ],
              [
                "times",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "unknown",
              1
            ],
            "ops": [
              [
                "means",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "means",
              0
            ],
            "ops": [
              [
                "means",
                0
              ]
            ]
          }
        ]
      },
      "trace": "\n\n>>>>>>>>>>>>> Counter 1\n    0. unknown/0  - \"worth\"\n                                   marker: Operator(unknown/0, None, evaluator(Bridge('{ ...next(operator), unknown: true }')), variables({}) bridge(bridge))\n                                   text: worth\n                                   value: worth\n                                   word: worth\n    1. means/0  - \"means\"\n                                   default: True\n                                   marker: Operator(means/0, None, evaluator(Bridge('{ ...next(operator), from: before[0], to: after[0] }')), variables({}) bridge(bridge))\n                                   text: means\n                                   word: means\n    2. price/0  - \"price\"\n                                   default: True\n                                   marker: Operator(price/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: price\n                                   word: price\n    3. times/0  - \"times\"\n                                   default: True\n                                   marker: Operator(times/0, None, evaluator(Bridge('{ ...next(operator), x: before[0], y: after[0], number: 'one' }')), variables({}) bridge(bridge))\n                                   text: times\n                                   word: times\n    4. quantity/0  - \"quantity\"\n                                   default: True\n                                   marker: Operator(quantity/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: quantity\n                                   word: quantity\n<<<<<<<<<<<<<\nNext Op (index=0) is Context({marker: Operator(unknown/0, None, evaluator(Bridge('{ ...next(operator), unknown: true }')), variables({}) bridge(bridge)), text: worth, value: worth, word: worth})\n\n>>>>>>>>>>>>> Counter 2\n   *0. unknown/1  - \"worth\"\n                                   marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: worth\n                                   unknown: True\n                                   value: worth\n                                   word: worth\n    1. means/0  - \"means\"\n                                   default: True\n                                   marker: Operator(means/0, None, evaluator(Bridge('{ ...next(operator), from: before[0], to: after[0] }')), variables({}) bridge(bridge))\n                                   text: means\n                                   word: means\n    2. price/0  - \"price\"\n                                   default: True\n                                   marker: Operator(price/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: price\n                                   word: price\n    3. times/0  - \"times\"\n                                   default: True\n                                   marker: Operator(times/0, None, evaluator(Bridge('{ ...next(operator), x: before[0], y: after[0], number: 'one' }')), variables({}) bridge(bridge))\n                                   text: times\n                                   word: times\n    4. quantity/0  - \"quantity\"\n                                   default: True\n                                   marker: Operator(quantity/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: quantity\n                                   word: quantity\n<<<<<<<<<<<<<\nNext Op (index=2) is Context({default: True, marker: Operator(price/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), text: price, word: price})\n\n>>>>>>>>>>>>> Counter 3\n    0. unknown/1  - \"worth\"\n                                   marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: worth\n                                   unknown: True\n                                   value: worth\n                                   word: worth\n    1. means/0  - \"means\"\n                                   default: True\n                                   marker: Operator(means/0, None, evaluator(Bridge('{ ...next(operator), from: before[0], to: after[0] }')), variables({}) bridge(bridge))\n                                   text: means\n                                   word: means\n   *2. price/1  - \"price\"\n                                   default: True\n                                   marker: Operator(price/1, None, evaluator(None), variables({}) bridge(bridge))\n                                   text: price\n                                   word: price\n    3. times/0  - \"times\"\n                                   default: True\n                                   marker: Operator(times/0, None, evaluator(Bridge('{ ...next(operator), x: before[0], y: after[0], number: 'one' }')), variables({}) bridge(bridge))\n                                   text: times\n                                   word: times\n    4. quantity/0  - \"quantity\"\n                                   default: True\n                                   marker: Operator(quantity/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: quantity\n                                   word: quantity\n<<<<<<<<<<<<<\nNext Op (index=4) is Context({default: True, marker: Operator(quantity/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), text: quantity, word: quantity})\n\n>>>>>>>>>>>>> Counter 4\n    0. unknown/1  - \"worth\"\n                                   marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: worth\n                                   unknown: True\n                                   value: worth\n                                   word: worth\n    1. means/0  - \"means\"\n                                   default: True\n                                   marker: Operator(means/0, None, evaluator(Bridge('{ ...next(operator), from: before[0], to: after[0] }')), variables({}) bridge(bridge))\n                                   text: means\n                                   word: means\n    2. price/1  - \"price\"\n                                   default: True\n                                   marker: Operator(price/1, None, evaluator(None), variables({}) bridge(bridge))\n                                   text: price\n                                   word: price\n    3. times/0  - \"times\"\n                                   default: True\n                                   marker: Operator(times/0, None, evaluator(Bridge('{ ...next(operator), x: before[0], y: after[0], number: 'one' }')), variables({}) bridge(bridge))\n                                   text: times\n                                   word: times\n   *4. quantity/1  - \"quantity\"\n                                   default: True\n                                   marker: Operator(quantity/1, None, evaluator(None), variables({}) bridge(bridge))\n                                   text: quantity\n                                   word: quantity\n<<<<<<<<<<<<<\nNext Op (index=3) is Context({default: True, marker: Operator(times/0, None, evaluator(Bridge('{ ...next(operator), x: before[0], y: after[0], number: 'one' }')), variables({}) bridge(bridge)), text: times, word: times})\n\n>>>>>>>>>>>>> Counter 5\n    0. unknown/1  - \"worth\"\n                                   marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge))\n                                   text: worth\n                                   unknown: True\n                                   value: worth\n                                   word: worth\n    1. means/0  - \"means\"\n                                   default: True\n                                   marker: Operator(means/0, None, evaluator(Bridge('{ ...next(operator), from: before[0], to: after[0] }')), variables({}) bridge(bridge))\n                                   text: means\n                                   word: means\n   *2. times/1  - \"price times quantity\"\n                                   default: True\n                                   marker: Operator(times/1, None, evaluator(None), variables({}) bridge(bridge))\n                                   number: one\n                                   text: price times quantity\n                                   word: times\n                                   x: Context({default: True, marker: Operator(price/1, None, evaluator(None), variables({}) bridge(bridge)), text: price, types: ['price'], word: price})\n                                   y: Context({default: True, marker: Operator(quantity/1, None, evaluator(None), variables({}) bridge(bridge)), text: quantity, types: ['quantity'], word: quantity})\n<<<<<<<<<<<<<\nNext Op (index=0) is Context({marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), text: worth, unknown: True, value: worth, word: worth})\n\n>>>>>>>>>>>>> Counter 6\n   *0. unknown/2  - \"worth\"\n                                   marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge))\n                                   text: worth\n                                   unknown: True\n                                   value: worth\n                                   word: worth\n    1. means/0  - \"means\"\n                                   default: True\n                                   marker: Operator(means/0, None, evaluator(Bridge('{ ...next(operator), from: before[0], to: after[0] }')), variables({}) bridge(bridge))\n                                   text: means\n                                   word: means\n    2. times/1  - \"price times quantity\"\n                                   default: True\n                                   marker: Operator(times/1, None, evaluator(None), variables({}) bridge(bridge))\n                                   number: one\n                                   text: price times quantity\n                                   word: times\n                                   x: Context({default: True, marker: Operator(price/1, None, evaluator(None), variables({}) bridge(bridge)), text: price, types: ['price'], word: price})\n                                   y: Context({default: True, marker: Operator(quantity/1, None, evaluator(None), variables({}) bridge(bridge)), text: quantity, types: ['quantity'], word: quantity})\n<<<<<<<<<<<<<\nNext Op (index=1) is Context({default: True, marker: Operator(means/0, None, evaluator(Bridge('{ ...next(operator), from: before[0], to: after[0] }')), variables({}) bridge(bridge)), text: means, word: means})\n\n>>>>>>>>>>>>> Counter 7\n   *0. means/1  - \"worth means price times quantity\"\n                                   default: True\n                                   from: Context({marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), text: worth, unknown: True, value: worth, word: worth})\n                                   marker: Operator(means/1, None, evaluator(None), variables({}) bridge(bridge))\n                                   text: worth means price times quantity\n                                   to: Context({default: True, marker: Operator(times/1, None, evaluator(None), variables({}) bridge(bridge)), number: one, text: price times quantity, word: times, x: Context({default: True, marker: Operator(price/1, None, evaluator(None), variables({}) bridge(bridge)), text: price, types: ['price'], word: price}), y: Context({default: True, marker: Operator(quantity/1, None, evaluator(None), variables({}) bridge(bridge)), text: quantity, types: ['quantity'], word: quantity})})\n                                   word: means\n<<<<<<<<<<<<<\n",
      "contexts": [
        {
          "word": "means",
          "marker": "means",
          "text": "worth means price times quantity",
          "to": {
            "word": "times",
            "marker": "times",
            "text": "price times quantity",
            "number": "one",
            "y": {
              "word": "quantity",
              "marker": "quantity",
              "text": "quantity",
              "types": [
                "quantity"
              ],
              "default": true
            },
            "default": true,
            "x": {
              "word": "price",
              "marker": "price",
              "text": "price",
              "types": [
                "price"
              ],
              "default": true
            }
          },
          "from": {
            "word": "worth",
            "marker": "unknown",
            "text": "worth",
            "value": "worth",
            "unknown": true
          },
          "default": true,
          "topLevel": true,
          "touchedBy": [
            "call2"
          ]
        }
      ],
      "generated": [
        "means"
      ],
      "paraphrases": [
        "worth means price times quantity"
      ],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "means",
            0
          ],
          [
            "price",
            0
          ],
          [
            "quantity",
            0
          ],
          [
            "times",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "means",
            0
          ],
          [
            "price",
            0
          ],
          [
            "quantity",
            0
          ],
          [
            "times",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "means",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "version": "6.29.0-beta.3",
      "query": "worth means price times quantity",
      "key": {
        "query": "worth means price times quantity"
      }
    }
  ],
  "fragments": [],
  "semantics": [],
  "associations": [
    [
      [
        "means",
        0
      ],
      [
        "price",
        0
      ],
      [
        "quantity",
        0
      ],
      [
        "times",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "means",
        0
      ],
      [
        "price",
        0
      ],
      [
        "quantity",
        0
      ],
      [
        "times",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "means",
        0
      ],
      [
        "unknown",
        1
      ]
    ]
  ]
}