{
  "resultss": [
    {
      "hierarchy": [
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "whose",
          "object"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 4.550134181976318,
      "logs": [
        "Undefined word 'humans'",
        "Undefined word 'mammels'",
        "Op choices were: [(('unknown', 0), [('is', 0), ('unknown', 0)]), (('unknown', 0), [('is', 0), ('unknown', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['is', 0], ['unknown', 0]]\n  Context for choosing the operator unknown/0 was [['is', 0], ['unknown', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"humans\",                                                                      \n                      \"word\": \"humans\"                                                                        \n                    }                                                                                         \n          RESULT    humans                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"mammels\",                                                                     \n                      \"word\": \"mammels\"                                                                       \n                    }                                                                                         \n          RESULT    mammels                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"humans\",                                                                    \n                        \"word\": \"humans\"                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"mammels\",                                                                   \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    humans is mammels                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"humans\",                                                                      \n                      \"word\": \"humans\",                                                                       \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    humans                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"mammels\",                                                                     \n                      \"word\": \"mammels\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    mammels                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"humans\",                                                                    \n                        \"word\": \"humans\",                                                                     \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"mammels\",                                                                   \n                        \"word\": \"mammels\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    humans are mammels                                                                        \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"humans\",                                                                      \n                      \"word\": \"humans\",                                                                       \n                      \"same\": {                                                                               \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"mammels\",                                                                   \n                        \"word\": \"mammels\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"humans\",                                                                      \n                      \"word\": \"humans\",                                                                       \n                      \"same\": {                                                                               \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"mammels\",                                                                   \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"humans\",                                                                    \n                        \"word\": \"humans\"                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"mammels\",                                                                   \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"humans\",                                                                    \n                        \"word\": \"humans\"                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"mammels\",                                                                   \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "unknown",
              0
            ],
            [
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "unknown",
            0
          ],
          [
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 0.7713232040405273,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "humans",
            "word": "humans",
            "response": true
          },
          "two": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "mammels",
            "word": "mammels",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "humans is mammels"
      ],
      "paraphrases": [
        "humans are mammels"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 76.5,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 5.301971197128296,
      "logs": [
        "Undefined word 'animals'",
        "Op choices were: [(('unknown', 0), [('is', 0), ('mammel', 0), ('unknown', 0)]), (('mammel', 0), [('is', 0), ('mammel', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['is', 0], ['mammel', 0], ['unknown', 0]]\n  Context for choosing the operator mammel/0 was [['is', 0], ['mammel', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"mammel\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"mammel\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"mammel\",                                                                      \n                      \"word\": \"mammels\"                                                                       \n                    }                                                                                         \n          RESULT    mammel                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"animals\",                                                                     \n                      \"word\": \"animals\"                                                                       \n                    }                                                                                         \n          RESULT    animals                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"animals\",                                                                   \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    mammel is animals                                                                         \n",
        "Generator           KM 'hierarchy' ordinal: 32                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"mammel\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"mammel\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"mammel\",                                                                      \n                      \"word\": \"mammels\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    mammels                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"animals\",                                                                     \n                      \"word\": \"animals\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    animals                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"animals\",                                                                   \n                        \"word\": \"animals\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    mammels are animals                                                                       \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"mammel\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"mammel\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"mammel\",                                                                      \n                      \"word\": \"mammels\",                                                                      \n                      \"same\": {                                                                               \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"animals\",                                                                   \n                        \"word\": \"animals\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n",
        "    WARNING from Dialogues KM: For the \"X is Y\" type phrase implement a same handler.\n    The semantic would be\n      match: ({context}) => context.marker == 'mammel' && context.same && <other conditions as you like>\n      apply: ({context}) => <do stuff... context.same is the other value>; context.sameWasProcessed = true\n    The input context would be:\n      {\n        \"marker\": \"mammel\",\n        \"number\": \"many\",\n        \"types\": [\n          \"mammel\"\n        ],\n        \"value\": \"mammel\",\n        \"word\": \"mammels\",\n        \"same\": {\n          \"marker\": \"unknown\",\n          \"types\": [\n            \"unknown\"\n          ],\n          \"unknown\": true,\n          \"value\": \"animals\",\n          \"word\": \"animals\"\n        }\n      }\n    ",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"animals\",                                                                     \n                      \"word\": \"animals\",                                                                      \n                      \"same\": {                                                                               \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"animals\",                                                                     \n                      \"word\": \"animals\",                                                                      \n                      \"same\": {                                                                               \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"animals\",                                                                   \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"animals\",                                                                   \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "is",
                0
              ],
              [
                "mammel",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "mammel",
              0
            ],
            [
              [
                "is",
                0
              ],
              [
                "mammel",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "is",
              0
            ],
            [
              "mammel",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "mammel",
            0
          ],
          [
            [
              "is",
              0
            ],
            [
              "mammel",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 1.22288179397583,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "mammel",
            "number": "many",
            "types": [
              "mammel"
            ],
            "value": "mammel",
            "word": "mammels",
            "response": true
          },
          "two": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "animals",
            "word": "animals",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "mammel is animals"
      ],
      "paraphrases": [
        "mammels are animals"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 76.9,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "animal",
          "object"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 5.8051371574401855,
      "logs": [
        "Undefined word 'ears'",
        "Op choices were: [(('unknown', 0), [('have', 0), ('mammel', 0), ('unknown', 0)]), (('mammel', 0), [('have', 0), ('mammel', 0)]), (('have', 0), [('have', 0)]), (('have', 1), [('have', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['have', 0], ['mammel', 0], ['unknown', 0]]\n  Context for choosing the operator mammel/0 was [['have', 0], ['mammel', 0]]\n  Context for choosing the operator have/0 was [['have', 0]]\n  Context for choosing the operator have/1 was [['have', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 22                                                                \n          APPLIED   Generator(() => true, ({context}) => JSON.stringify(context))                             \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"ears\",                                                                      \n                        \"word\": \"ears\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n          RESULT    {\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"mammel\",\"number\":\"many\",\"types\":[\"mam\n                    mel\"],\"value\":\"mammel\",\"word\":\"mammels\"},\"property\":{\"marker\":\"property\",\"types\":[\"propert\n                    y\"],\"unknown\":true,\"value\":\"ears\",\"word\":\"ears\"},\"word\":\"have\",\"topLevel\":true,\"sameWasPro\n                    cessed\":true}                                                                             \n",
        "Generator           KM 'hierarchy' ordinal: 32                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"mammel\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"mammel\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"mammel\",                                                                      \n                      \"word\": \"mammels\",                                                                      \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    mammels                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 19                                                                \n          APPLIED   Generator(({context}) => context.paraphrase && context.word, ({context}) => `${context.wor\n                    d}`)                                                                                      \n          TO        {                                                                                         \n                      \"marker\": \"property\",                                                                   \n                      \"types\": [                                                                              \n                        \"property\"                                                                            \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"ears\",                                                                        \n                      \"word\": \"ears\",                                                                         \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    ears                                                                                      \n",
        "Generator           KM 'properties' ordinal: 2                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'have') && context.parap\n                    hrase && !context.query, ({context, g}) => {                                              \n                            return `${g(context.object)} ${context.word} ${g(context.property)}`              \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"ears\",                                                                      \n                        \"word\": \"ears\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true,                                                               \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    mammels have ears                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'properties' ordinal: 0                                                                \n          APPLIED   Semantic(({context}) => context.marker == 'have' && !context.query, ({context, objects, ap\n                    i}) => {                                                                                  \n                            if (context.negation) {                                                           \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, false)                                                        \n                            } else {                                                                          \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, true)                                                         \n                            }                                                                                 \n                            context.sameWasProcessed = true                                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"ears\",                                                                      \n                        \"word\": \"ears\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"ears\",                                                                      \n                        \"word\": \"ears\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "have",
                0
              ],
              [
                "mammel",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "mammel",
              0
            ],
            [
              [
                "have",
                0
              ],
              [
                "mammel",
                0
              ]
            ]
          ],
          [
            [
              "have",
              0
            ],
            [
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              1
            ],
            [
              [
                "have",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "have",
              0
            ],
            [
              "mammel",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "mammel",
            0
          ],
          [
            [
              "have",
              0
            ],
            [
              "mammel",
              0
            ]
          ]
        ],
        [
          [
            "have",
            0
          ],
          [
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            1
          ],
          [
            [
              "have",
              1
            ]
          ]
        ]
      ],
      "times": 0.8508000373840332,
      "trace": "undefined",
      "contexts": [
        {
          "doesable": true,
          "marker": "have",
          "object": {
            "marker": "mammel",
            "number": "many",
            "types": [
              "mammel"
            ],
            "value": "mammel",
            "word": "mammels"
          },
          "property": {
            "marker": "property",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "ears",
            "word": "ears"
          },
          "word": "have",
          "topLevel": true,
          "sameWasProcessed": true
        }
      ],
      "generated": [
        "{\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"mammel\",\"number\":\"many\",\"types\":[\"mammel\"],\"value\":\"mammel\",\"word\":\"mammels\"},\"property\":{\"marker\":\"property\",\"types\":[\"property\"],\"unknown\":true,\"value\":\"ears\",\"word\":\"ears\"},\"word\":\"have\",\"topLevel\":true,\"sameWasProcessed\":true}"
      ],
      "paraphrases": [
        "mammels have ears"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 77.4,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "animal",
          "object"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 0.004148244857788086,
      "logs": [
        "Undefined word 'wings'",
        "Op choices were: [(('unknown', 0), [('doesnt', 0), ('have', 0), ('mammel', 0), ('unknown', 0)]), (('mammel', 0), [('doesnt', 0), ('have', 0), ('mammel', 0)]), (('doesnt', 0), [('doesnt', 0), ('have', 0)]), (('have', 0), [('have', 0)]), (('have', 1), [('have', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['doesnt', 0], ['have', 0], ['mammel', 0], ['unknown', 0]]\n  Context for choosing the operator mammel/0 was [['doesnt', 0], ['have', 0], ['mammel', 0]]\n  Context for choosing the operator doesnt/0 was [['doesnt', 0], ['have', 0]]\n  Context for choosing the operator have/0 was [['have', 0]]\n  Context for choosing the operator have/1 was [['have', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 22                                                                \n          APPLIED   Generator(() => true, ({context}) => JSON.stringify(context))                             \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"negation\": true,                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"types\": [                                                                              \n                        \"have\"                                                                                \n                      ],                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n          RESULT    {\"doesable\":true,\"marker\":\"have\",\"negation\":true,\"object\":{\"marker\":\"mammel\",\"number\":\"man\n                    y\",\"types\":[\"mammel\"],\"value\":\"mammel\",\"word\":\"mammels\"},\"property\":{\"marker\":\"property\",\"\n                    types\":[\"property\"],\"unknown\":true,\"value\":\"wings\",\"word\":\"wings\"},\"types\":[\"have\"],\"word\"\n                    :\"have\",\"topLevel\":true,\"sameWasProcessed\":true}                                          \n",
        "Generator           KM 'hierarchy' ordinal: 32                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"mammel\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"mammel\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"mammel\",                                                                      \n                      \"word\": \"mammels\",                                                                      \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    mammels                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 19                                                                \n          APPLIED   Generator(({context}) => context.paraphrase && context.word, ({context}) => `${context.wor\n                    d}`)                                                                                      \n          TO        {                                                                                         \n                      \"marker\": \"property\",                                                                   \n                      \"types\": [                                                                              \n                        \"property\"                                                                            \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"wings\",                                                                       \n                      \"word\": \"wings\",                                                                        \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    wings                                                                                     \n",
        "Generator           KM 'properties' ordinal: 0                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'have') && context.parap\n                    hrase && context.negation, ({context, g}) => {                                            \n                            /*                                                                                \n                            let query = ''                                                                    \n                            if (context.query) {                                                              \n                              query = \"?\"                                                                     \n                            }                                                                                 \n                            return `${g(context.object)} ${context.word} ${g(context.property)}${query}`      \n                            */                                                                                \n                            return `${g(context.object)} doesnt ${context.word} ${g(context.property)}`       \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"negation\": true,                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"types\": [                                                                              \n                        \"have\"                                                                                \n                      ],                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true,                                                               \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    mammels doesnt have wings                                                                 \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'properties' ordinal: 0                                                                \n          APPLIED   Semantic(({context}) => context.marker == 'have' && !context.query, ({context, objects, ap\n                    i}) => {                                                                                  \n                            if (context.negation) {                                                           \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, false)                                                        \n                            } else {                                                                          \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, true)                                                         \n                            }                                                                                 \n                            context.sameWasProcessed = true                                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"negation\": true,                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"types\": [                                                                              \n                        \"have\"                                                                                \n                      ],                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"negation\": true,                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"types\": [                                                                              \n                        \"have\"                                                                                \n                      ],                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "doesnt",
                0
              ],
              [
                "have",
                0
              ],
              [
                "mammel",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "mammel",
              0
            ],
            [
              [
                "doesnt",
                0
              ],
              [
                "have",
                0
              ],
              [
                "mammel",
                0
              ]
            ]
          ],
          [
            [
              "doesnt",
              0
            ],
            [
              [
                "doesnt",
                0
              ],
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              0
            ],
            [
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              1
            ],
            [
              [
                "have",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "mammel",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "mammel",
            0
          ],
          [
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ],
            [
              "mammel",
              0
            ]
          ]
        ],
        [
          [
            "doesnt",
            0
          ],
          [
            [
              "doesnt",
              0
            ],
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            0
          ],
          [
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            1
          ],
          [
            [
              "have",
              1
            ]
          ]
        ]
      ],
      "times": 0.9117593765258789,
      "trace": "undefined",
      "contexts": [
        {
          "doesable": true,
          "marker": "have",
          "negation": true,
          "object": {
            "marker": "mammel",
            "number": "many",
            "types": [
              "mammel"
            ],
            "value": "mammel",
            "word": "mammels"
          },
          "property": {
            "marker": "property",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "wings",
            "word": "wings"
          },
          "types": [
            "have"
          ],
          "word": "have",
          "topLevel": true,
          "sameWasProcessed": true
        }
      ],
      "generated": [
        "{\"doesable\":true,\"marker\":\"have\",\"negation\":true,\"object\":{\"marker\":\"mammel\",\"number\":\"many\",\"types\":[\"mammel\"],\"value\":\"mammel\",\"word\":\"mammels\"},\"property\":{\"marker\":\"property\",\"types\":[\"property\"],\"unknown\":true,\"value\":\"wings\",\"word\":\"wings\"},\"types\":[\"have\"],\"word\":\"have\",\"topLevel\":true,\"sameWasProcessed\":true}"
      ],
      "paraphrases": [
        "mammels doesnt have wings"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 77.8,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "animal",
          "object"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 0.008286714553833008,
      "logs": [
        "Undefined word 'skin'",
        "Op choices were: [(('unknown', 0), [('animal', 0), ('have', 0), ('unknown', 0)]), (('animal', 0), [('animal', 0), ('have', 0)]), (('have', 0), [('have', 0)]), (('have', 1), [('have', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['animal', 0], ['have', 0], ['unknown', 0]]\n  Context for choosing the operator animal/0 was [['animal', 0], ['have', 0]]\n  Context for choosing the operator have/0 was [['have', 0]]\n  Context for choosing the operator have/1 was [['have', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 22                                                                \n          APPLIED   Generator(() => true, ({context}) => JSON.stringify(context))                             \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"skin\",                                                                      \n                        \"word\": \"skin\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n          RESULT    {\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"animal\",\"number\":\"many\",\"types\":[\"ani\n                    mal\"],\"value\":\"animal\",\"word\":\"animals\"},\"property\":{\"marker\":\"property\",\"types\":[\"propert\n                    y\"],\"unknown\":true,\"value\":\"skin\",\"word\":\"skin\"},\"word\":\"have\",\"topLevel\":true,\"sameWasPro\n                    cessed\":true}                                                                             \n",
        "Generator           KM 'hierarchy' ordinal: 34                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"animal\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"animal\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"animal\",                                                                      \n                      \"word\": \"animals\",                                                                      \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    animals                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 19                                                                \n          APPLIED   Generator(({context}) => context.paraphrase && context.word, ({context}) => `${context.wor\n                    d}`)                                                                                      \n          TO        {                                                                                         \n                      \"marker\": \"property\",                                                                   \n                      \"types\": [                                                                              \n                        \"property\"                                                                            \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"skin\",                                                                        \n                      \"word\": \"skin\",                                                                         \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    skin                                                                                      \n",
        "Generator           KM 'properties' ordinal: 2                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'have') && context.parap\n                    hrase && !context.query, ({context, g}) => {                                              \n                            return `${g(context.object)} ${context.word} ${g(context.property)}`              \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"skin\",                                                                      \n                        \"word\": \"skin\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true,                                                               \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    animals have skin                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'properties' ordinal: 0                                                                \n          APPLIED   Semantic(({context}) => context.marker == 'have' && !context.query, ({context, objects, ap\n                    i}) => {                                                                                  \n                            if (context.negation) {                                                           \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, false)                                                        \n                            } else {                                                                          \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, true)                                                         \n                            }                                                                                 \n                            context.sameWasProcessed = true                                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"skin\",                                                                      \n                        \"word\": \"skin\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"skin\",                                                                      \n                        \"word\": \"skin\"                                                                        \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "have",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "animal",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              0
            ],
            [
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              1
            ],
            [
              [
                "have",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "animal",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            0
          ],
          [
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            1
          ],
          [
            [
              "have",
              1
            ]
          ]
        ]
      ],
      "times": 1.2466778755187988,
      "trace": "undefined",
      "contexts": [
        {
          "doesable": true,
          "marker": "have",
          "object": {
            "marker": "animal",
            "number": "many",
            "types": [
              "animal"
            ],
            "value": "animal",
            "word": "animals"
          },
          "property": {
            "marker": "property",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "skin",
            "word": "skin"
          },
          "word": "have",
          "topLevel": true,
          "sameWasProcessed": true
        }
      ],
      "generated": [
        "{\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"animal\",\"number\":\"many\",\"types\":[\"animal\"],\"value\":\"animal\",\"word\":\"animals\"},\"property\":{\"marker\":\"property\",\"types\":[\"property\"],\"unknown\":true,\"value\":\"skin\",\"word\":\"skin\"},\"word\":\"have\",\"topLevel\":true,\"sameWasProcessed\":true}"
      ],
      "paraphrases": [
        "animals have skin"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 78.3,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "animal",
          "object"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 0.0017130374908447266,
      "logs": [
        "Undefined word 'birds'",
        "Op choices were: [(('unknown', 0), [('animal', 0), ('is', 0), ('unknown', 0)]), (('animal', 0), [('animal', 0), ('is', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['animal', 0], ['is', 0], ['unknown', 0]]\n  Context for choosing the operator animal/0 was [['animal', 0], ['is', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"birds\",                                                                       \n                      \"word\": \"birds\"                                                                         \n                    }                                                                                         \n          RESULT    birds                                                                                     \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"animal\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"animal\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"animal\",                                                                      \n                      \"word\": \"animals\"                                                                       \n                    }                                                                                         \n          RESULT    animal                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"birds\",                                                                     \n                        \"word\": \"birds\"                                                                       \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    birds is animal                                                                           \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"birds\",                                                                       \n                      \"word\": \"birds\",                                                                        \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    birds                                                                                     \n",
        "Generator           KM 'hierarchy' ordinal: 34                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"animal\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"animal\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"animal\",                                                                      \n                      \"word\": \"animals\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    animals                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"birds\",                                                                     \n                        \"word\": \"birds\",                                                                      \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    birds are animals                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"birds\",                                                                       \n                      \"word\": \"birds\",                                                                        \n                      \"same\": {                                                                               \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"birds\",                                                                       \n                      \"word\": \"birds\",                                                                        \n                      \"same\": {                                                                               \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"birds\",                                                                     \n                        \"word\": \"birds\"                                                                       \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"birds\",                                                                     \n                        \"word\": \"birds\"                                                                       \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "animal",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "animal",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 0.845449686050415,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "birds",
            "word": "birds",
            "response": true
          },
          "two": {
            "marker": "animal",
            "number": "many",
            "types": [
              "animal"
            ],
            "value": "animal",
            "word": "animals",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "birds is animal"
      ],
      "paraphrases": [
        "birds are animals"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 78.7,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "bird",
          "queryable"
        ],
        [
          "bird",
          "object"
        ],
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "bird",
          "hierarchyAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "animal",
          "object"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "bird",
          "theAble"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 6.149804592132568,
      "logs": [
        "Undefined word 'wings'",
        "Op choices were: [(('unknown', 0), [('bird', 0), ('have', 0), ('unknown', 0)]), (('bird', 0), [('bird', 0), ('have', 0)]), (('have', 0), [('have', 0)]), (('have', 1), [('have', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['bird', 0], ['have', 0], ['unknown', 0]]\n  Context for choosing the operator bird/0 was [['bird', 0], ['have', 0]]\n  Context for choosing the operator have/0 was [['have', 0]]\n  Context for choosing the operator have/1 was [['have', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 22                                                                \n          APPLIED   Generator(() => true, ({context}) => JSON.stringify(context))                             \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bird\",                                                                     \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bird\"                                                                              \n                        ],                                                                                    \n                        \"value\": \"bird\",                                                                      \n                        \"word\": \"birds\"                                                                       \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n          RESULT    {\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"bird\",\"number\":\"many\",\"types\":[\"bird\"\n                    ],\"value\":\"bird\",\"word\":\"birds\"},\"property\":{\"marker\":\"property\",\"types\":[\"property\"],\"unk\n                    nown\":true,\"value\":\"wings\",\"word\":\"wings\"},\"word\":\"have\",\"topLevel\":true,\"sameWasProcessed\n                    \":true}                                                                                   \n",
        "Generator           KM 'hierarchy' ordinal: 36                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"bird\",                                                                       \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"bird\"                                                                                \n                      ],                                                                                      \n                      \"value\": \"bird\",                                                                        \n                      \"word\": \"birds\",                                                                        \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    birds                                                                                     \n",
        "Generator           KM 'dialogues' ordinal: 19                                                                \n          APPLIED   Generator(({context}) => context.paraphrase && context.word, ({context}) => `${context.wor\n                    d}`)                                                                                      \n          TO        {                                                                                         \n                      \"marker\": \"property\",                                                                   \n                      \"types\": [                                                                              \n                        \"property\"                                                                            \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"wings\",                                                                       \n                      \"word\": \"wings\",                                                                        \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    wings                                                                                     \n",
        "Generator           KM 'properties' ordinal: 2                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'have') && context.parap\n                    hrase && !context.query, ({context, g}) => {                                              \n                            return `${g(context.object)} ${context.word} ${g(context.property)}`              \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bird\",                                                                     \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bird\"                                                                              \n                        ],                                                                                    \n                        \"value\": \"bird\",                                                                      \n                        \"word\": \"birds\"                                                                       \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true,                                                               \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    birds have wings                                                                          \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'properties' ordinal: 0                                                                \n          APPLIED   Semantic(({context}) => context.marker == 'have' && !context.query, ({context, objects, ap\n                    i}) => {                                                                                  \n                            if (context.negation) {                                                           \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, false)                                                        \n                            } else {                                                                          \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, true)                                                         \n                            }                                                                                 \n                            context.sameWasProcessed = true                                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bird\",                                                                     \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bird\"                                                                              \n                        ],                                                                                    \n                        \"value\": \"bird\",                                                                      \n                        \"word\": \"birds\"                                                                       \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bird\",                                                                     \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bird\"                                                                              \n                        ],                                                                                    \n                        \"value\": \"bird\",                                                                      \n                        \"word\": \"birds\"                                                                       \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "bird",
                0
              ],
              [
                "have",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "bird",
              0
            ],
            [
              [
                "bird",
                0
              ],
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              0
            ],
            [
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              1
            ],
            [
              [
                "have",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "bird",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "bird",
            0
          ],
          [
            [
              "bird",
              0
            ],
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            0
          ],
          [
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            1
          ],
          [
            [
              "have",
              1
            ]
          ]
        ]
      ],
      "times": 0.8536627292633057,
      "trace": "undefined",
      "contexts": [
        {
          "doesable": true,
          "marker": "have",
          "object": {
            "marker": "bird",
            "number": "many",
            "types": [
              "bird"
            ],
            "value": "bird",
            "word": "birds"
          },
          "property": {
            "marker": "property",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "wings",
            "word": "wings"
          },
          "word": "have",
          "topLevel": true,
          "sameWasProcessed": true
        }
      ],
      "generated": [
        "{\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"bird\",\"number\":\"many\",\"types\":[\"bird\"],\"value\":\"bird\",\"word\":\"birds\"},\"property\":{\"marker\":\"property\",\"types\":[\"property\"],\"unknown\":true,\"value\":\"wings\",\"word\":\"wings\"},\"word\":\"have\",\"topLevel\":true,\"sameWasProcessed\":true}"
      ],
      "paraphrases": [
        "birds have wings"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 79.2,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "bird",
          "queryable"
        ],
        [
          "bird",
          "object"
        ],
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "bird",
          "hierarchyAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "animal",
          "object"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "bird",
          "theAble"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 0.008520364761352539,
      "logs": [
        "Undefined word 'felines'",
        "Op choices were: [(('unknown', 0), [('animal', 0), ('is', 0), ('unknown', 0)]), (('animal', 0), [('animal', 0), ('is', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['animal', 0], ['is', 0], ['unknown', 0]]\n  Context for choosing the operator animal/0 was [['animal', 0], ['is', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"felines\",                                                                     \n                      \"word\": \"felines\"                                                                       \n                    }                                                                                         \n          RESULT    felines                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"animal\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"animal\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"animal\",                                                                      \n                      \"word\": \"animals\"                                                                       \n                    }                                                                                         \n          RESULT    animal                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"felines\",                                                                   \n                        \"word\": \"felines\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    felines is animal                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"felines\",                                                                     \n                      \"word\": \"felines\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    felines                                                                                   \n",
        "Generator           KM 'hierarchy' ordinal: 34                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"animal\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"animal\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"animal\",                                                                      \n                      \"word\": \"animals\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    animals                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"felines\",                                                                   \n                        \"word\": \"felines\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    felines are animals                                                                       \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"felines\",                                                                     \n                      \"word\": \"felines\",                                                                      \n                      \"same\": {                                                                               \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"felines\",                                                                     \n                      \"word\": \"felines\",                                                                      \n                      \"same\": {                                                                               \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"felines\",                                                                   \n                        \"word\": \"felines\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"felines\",                                                                   \n                        \"word\": \"felines\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "animal",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "animal",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 1.3157908916473389,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "felines",
            "word": "felines",
            "response": true
          },
          "two": {
            "marker": "animal",
            "number": "many",
            "types": [
              "animal"
            ],
            "value": "animal",
            "word": "animals",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "felines is animal"
      ],
      "paraphrases": [
        "felines are animals"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 79.6,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "bird",
          "queryable"
        ],
        [
          "bird",
          "object"
        ],
        [
          "human",
          "hierarchyAble"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "bird",
          "hierarchyAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "whose",
          "object"
        ],
        [
          "human",
          "object"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "feline",
          "object"
        ],
        [
          "feline",
          "queryable"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "feline",
          "theAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "animal",
          "object"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "feline",
          "hierarchyAble"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "bird",
          "theAble"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "is",
          "canBeQuestion"
        ]
      ],
      "load_cache_time": 6.658157825469971,
      "logs": [
        "Undefined word 'cats'",
        "Op choices were: [(('unknown', 0), [('feline', 0), ('is', 0), ('unknown', 0)]), (('feline', 0), [('feline', 0), ('is', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['feline', 0], ['is', 0], ['unknown', 0]]\n  Context for choosing the operator feline/0 was [['feline', 0], ['is', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"cats\",                                                                        \n                      \"word\": \"cats\"                                                                          \n                    }                                                                                         \n          RESULT    cats                                                                                      \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"feline\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"feline\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"feline\",                                                                      \n                      \"word\": \"felines\"                                                                       \n                    }                                                                                         \n          RESULT    feline                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"cats\",                                                                      \n                        \"word\": \"cats\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"feline\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"feline\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"feline\",                                                                    \n                        \"word\": \"felines\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    cats is feline                                                                            \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"cats\",                                                                        \n                      \"word\": \"cats\",                                                                         \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    cats                                                                                      \n",
        "Generator           KM 'hierarchy' ordinal: 38                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"feline\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"feline\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"feline\",                                                                      \n                      \"word\": \"felines\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    felines                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"cats\",                                                                      \n                        \"word\": \"cats\",                                                                       \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"feline\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"feline\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"feline\",                                                                    \n                        \"word\": \"felines\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    cats are felines                                                                          \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"cats\",                                                                        \n                      \"word\": \"cats\",                                                                         \n                      \"same\": {                                                                               \n                        \"marker\": \"feline\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"feline\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"feline\",                                                                    \n                        \"word\": \"felines\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"cats\",                                                                        \n                      \"word\": \"cats\",                                                                         \n                      \"same\": {                                                                               \n                        \"marker\": \"feline\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"feline\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"feline\",                                                                    \n                        \"word\": \"felines\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"cats\",                                                                      \n                        \"word\": \"cats\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"feline\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"feline\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"feline\",                                                                    \n                        \"word\": \"felines\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"cats\",                                                                      \n                        \"word\": \"cats\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"feline\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"feline\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"feline\",                                                                    \n                        \"word\": \"felines\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "feline",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "feline",
              0
            ],
            [
              [
                "feline",
                0
              ],
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "feline",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "feline",
            0
          ],
          [
            [
              "feline",
              0
            ],
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 0.8658082485198975,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "cats",
            "word": "cats",
            "response": true
          },
          "two": {
            "marker": "feline",
            "number": "many",
            "types": [
              "feline"
            ],
            "value": "feline",
            "word": "felines",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "cats is feline"
      ],
      "paraphrases": [
        "cats are felines"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 80.1,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "theAble",
          "theAble"
        ],
        [
          "human",
          "object"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "animal",
          "object"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "feline",
          "object"
        ],
        [
          "cat",
          "hierarchyAble"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "cat",
          "queryable"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "feline",
          "theAble"
        ],
        [
          "bird",
          "hierarchyAble"
        ],
        [
          "human",
          "hierarchyAble"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "bird",
          "queryable"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "bird",
          "object"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "bird",
          "theAble"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "cat",
          "object"
        ],
        [
          "cat",
          "theAble"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "feline",
          "queryable"
        ],
        [
          "feline",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ]
      ],
      "load_cache_time": 7.2434868812561035,
      "logs": [
        "Undefined word 'canines'",
        "Op choices were: [(('unknown', 0), [('animal', 0), ('is', 0), ('unknown', 0)]), (('animal', 0), [('animal', 0), ('is', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['animal', 0], ['is', 0], ['unknown', 0]]\n  Context for choosing the operator animal/0 was [['animal', 0], ['is', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"canines\",                                                                     \n                      \"word\": \"canines\"                                                                       \n                    }                                                                                         \n          RESULT    canines                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"animal\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"animal\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"animal\",                                                                      \n                      \"word\": \"animals\"                                                                       \n                    }                                                                                         \n          RESULT    animal                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"canines\",                                                                   \n                        \"word\": \"canines\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    canines is animal                                                                         \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"canines\",                                                                     \n                      \"word\": \"canines\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    canines                                                                                   \n",
        "Generator           KM 'hierarchy' ordinal: 34                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"animal\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"animal\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"animal\",                                                                      \n                      \"word\": \"animals\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    animals                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"canines\",                                                                   \n                        \"word\": \"canines\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    canines are animals                                                                       \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"canines\",                                                                     \n                      \"word\": \"canines\",                                                                      \n                      \"same\": {                                                                               \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"canines\",                                                                     \n                      \"word\": \"canines\",                                                                      \n                      \"same\": {                                                                               \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"canines\",                                                                   \n                        \"word\": \"canines\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"canines\",                                                                   \n                        \"word\": \"canines\"                                                                     \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"animal\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"animal\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"animal\",                                                                    \n                        \"word\": \"animals\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "animal",
              0
            ],
            [
              [
                "animal",
                0
              ],
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "animal",
            0
          ],
          [
            [
              "animal",
              0
            ],
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 0.917963981628418,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "canines",
            "word": "canines",
            "response": true
          },
          "two": {
            "marker": "animal",
            "number": "many",
            "types": [
              "animal"
            ],
            "value": "animal",
            "word": "animals",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "canines is animal"
      ],
      "paraphrases": [
        "canines are animals"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 13.9,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "theAble",
          "theAble"
        ],
        [
          "human",
          "object"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "animal",
          "object"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "feline",
          "object"
        ],
        [
          "cat",
          "hierarchyAble"
        ],
        [
          "canine",
          "queryable"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "cat",
          "queryable"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "feline",
          "theAble"
        ],
        [
          "bird",
          "hierarchyAble"
        ],
        [
          "human",
          "hierarchyAble"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "bird",
          "queryable"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "canine",
          "theAble"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "bird",
          "object"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "bird",
          "theAble"
        ],
        [
          "canine",
          "hierarchyAble"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "cat",
          "object"
        ],
        [
          "cat",
          "theAble"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "canine",
          "object"
        ],
        [
          "feline",
          "queryable"
        ],
        [
          "feline",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ]
      ],
      "load_cache_time": 7.594313383102417,
      "logs": [
        "Undefined word 'dogs'",
        "Op choices were: [(('unknown', 0), [('canine', 0), ('is', 0), ('unknown', 0)]), (('canine', 0), [('canine', 0), ('is', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['canine', 0], ['is', 0], ['unknown', 0]]\n  Context for choosing the operator canine/0 was [['canine', 0], ['is', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"dogs\",                                                                        \n                      \"word\": \"dogs\"                                                                          \n                    }                                                                                         \n          RESULT    dogs                                                                                      \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"canine\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"canine\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"canine\",                                                                      \n                      \"word\": \"canines\"                                                                       \n                    }                                                                                         \n          RESULT    canine                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"dogs\",                                                                      \n                        \"word\": \"dogs\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"canine\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"canine\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"canine\",                                                                    \n                        \"word\": \"canines\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    dogs is canine                                                                            \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"dogs\",                                                                        \n                      \"word\": \"dogs\",                                                                         \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    dogs                                                                                      \n",
        "Generator           KM 'hierarchy' ordinal: 42                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"canine\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"canine\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"canine\",                                                                      \n                      \"word\": \"canines\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    canines                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"dogs\",                                                                      \n                        \"word\": \"dogs\",                                                                       \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"canine\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"canine\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"canine\",                                                                    \n                        \"word\": \"canines\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    dogs are canines                                                                          \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"dogs\",                                                                        \n                      \"word\": \"dogs\",                                                                         \n                      \"same\": {                                                                               \n                        \"marker\": \"canine\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"canine\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"canine\",                                                                    \n                        \"word\": \"canines\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"dogs\",                                                                        \n                      \"word\": \"dogs\",                                                                         \n                      \"same\": {                                                                               \n                        \"marker\": \"canine\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"canine\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"canine\",                                                                    \n                        \"word\": \"canines\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"dogs\",                                                                      \n                        \"word\": \"dogs\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"canine\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"canine\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"canine\",                                                                    \n                        \"word\": \"canines\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"dogs\",                                                                      \n                        \"word\": \"dogs\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"canine\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"canine\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"canine\",                                                                    \n                        \"word\": \"canines\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "canine",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "canine",
              0
            ],
            [
              [
                "canine",
                0
              ],
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "canine",
              0
            ],
            [
              "is",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "canine",
            0
          ],
          [
            [
              "canine",
              0
            ],
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 0.8456573486328125,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "dogs",
            "word": "dogs",
            "response": true
          },
          "two": {
            "marker": "canine",
            "number": "many",
            "types": [
              "canine"
            ],
            "value": "canine",
            "word": "canines",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "dogs is canine"
      ],
      "paraphrases": [
        "dogs are canines"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 14.6,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "theAble",
          "theAble"
        ],
        [
          "human",
          "object"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "animal",
          "object"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "feline",
          "object"
        ],
        [
          "cat",
          "hierarchyAble"
        ],
        [
          "canine",
          "queryable"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "cat",
          "queryable"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "feline",
          "theAble"
        ],
        [
          "bird",
          "hierarchyAble"
        ],
        [
          "human",
          "hierarchyAble"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "dog",
          "theAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "bird",
          "queryable"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "dog",
          "object"
        ],
        [
          "canine",
          "theAble"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "bird",
          "object"
        ],
        [
          "dog",
          "queryable"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "bird",
          "theAble"
        ],
        [
          "canine",
          "hierarchyAble"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "dog",
          "hierarchyAble"
        ],
        [
          "cat",
          "object"
        ],
        [
          "cat",
          "theAble"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "canine",
          "object"
        ],
        [
          "feline",
          "queryable"
        ],
        [
          "feline",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ]
      ],
      "load_cache_time": 8.062747240066528,
      "logs": [
        "Undefined word 'bats'",
        "Op choices were: [(('unknown', 0), [('is', 0), ('mammel', 0), ('unknown', 0)]), (('mammel', 0), [('is', 0), ('mammel', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['is', 0], ['mammel', 0], ['unknown', 0]]\n  Context for choosing the operator mammel/0 was [['is', 0], ['mammel', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"bats\",                                                                        \n                      \"word\": \"bats\"                                                                          \n                    }                                                                                         \n          RESULT    bats                                                                                      \n",
        "Generator           KM 'dialogues' ordinal: 2                                                                 \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'queryable') && !context\n                    .isQuery && !context.paraphrase && context.value, ({context, g}) => {                     \n                            context.value.paraphrase = true;                                                  \n                            return g(context.value)                                                           \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"mammel\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"mammel\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"mammel\",                                                                      \n                      \"word\": \"mammels\"                                                                       \n                    }                                                                                         \n          RESULT    mammel                                                                                    \n",
        "Generator           KM 'dialogues' ordinal: 18                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && !context.respon\n                    se, ({context, g}) => {                                                                   \n                            return `${g(context.one)} is ${g(context.two)}`                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"bats\",                                                                      \n                        \"word\": \"bats\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    bats is mammel                                                                            \n",
        "Generator           KM 'dialogues' ordinal: 9                                                                 \n          APPLIED   Generator(({context}) => context.marker == 'unknown', ({context}) => {                    \n                            if (typeof context.marker === 'string') {                                         \n                              return context.value                                                            \n                            } else {                                                                          \n                              JSON.stringify(context.value)                                                   \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"bats\",                                                                        \n                      \"word\": \"bats\",                                                                         \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    bats                                                                                      \n",
        "Generator           KM 'hierarchy' ordinal: 32                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"mammel\",                                                                     \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"mammel\"                                                                              \n                      ],                                                                                      \n                      \"value\": \"mammel\",                                                                      \n                      \"word\": \"mammels\",                                                                      \n                      \"response\": false,                                                                      \n                      \"paraphrase\": true                                                                      \n                    }                                                                                         \n          RESULT    mammels                                                                                   \n",
        "Generator           KM 'dialogues' ordinal: 16                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'is') && context.paraphr\n                    ase, ({context, g}) => {                                                                  \n                            context.one.response = true                                                       \n                            context.two.response = true                                                       \n                            return `${g(context.one)} ${context.word} ${g(context.two)}`                      \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"bats\",                                                                      \n                        \"word\": \"bats\",                                                                       \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\",                                                                    \n                        \"response\": true                                                                      \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true,                                                                       \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    bats are mammels                                                                          \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'hierarchy' ordinal: 3                                                                 \n          APPLIED   Semantic(({context, listable}) => {                                                       \n                            if (context.marker == 'list') {                                                   \n                              listable(context, 'unknown')                                                    \n                            }                                                                                 \n                            return listable(context, 'unknown') && context.same                               \n                          }, ({objects, km, context, asList, listable}) => {                                  \n                            const api = km('properties').api                                                  \n                            const oneConcepts = asList(context);                                              \n                            const twoConcepts = asList(context.same);                                         \n                            for (let oneConcept of oneConcepts.value) {                                       \n                              for (let twoConcept of twoConcepts.value) {                                     \n                                if (oneConcept.unknown) {                                                     \n                                  oneConcept = makeObject({config, context: oneConcept})                      \n                                } else {                                                                      \n                                  oneConcept = oneConcept.value;                                              \n                                }                                                                             \n                                if (twoConcept.unknown) {                                                     \n                                  twoConcept = makeObject({config, context: twoConcept})                      \n                                } else {                                                                      \n                                  twoConcept = twoConcept.value;                                              \n                                }                                                                             \n                                api.rememberIsA(oneConcept, twoConcept)                                       \n                                context.sameWasProcessed = true                                               \n                              }                                                                               \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"bats\",                                                                        \n                      \"word\": \"bats\",                                                                         \n                      \"same\": {                                                                               \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      }                                                                                       \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"marker\": \"unknown\",                                                                    \n                      \"types\": [                                                                              \n                        \"unknown\"                                                                             \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"bats\",                                                                        \n                      \"word\": \"bats\",                                                                         \n                      \"same\": {                                                                               \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            KM 'dialogues' ordinal: 3                                                                 \n          APPLIED   Semantic(({context}) => context.marker == 'is' && !context.query && context.one && context\n                    .two, ({context, s, log}) => {                                                            \n                            const one = context.one;                                                          \n                            const two = context.two;                                                          \n                            one.same = two;                                                                   \n                            const onePrime = s(one)                                                           \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              warningSameNotEvaluated(log, context, one)                                      \n                            }                                                                                 \n                            one.same = undefined                                                              \n                            let twoPrime;                                                                     \n                            if (!onePrime.sameWasProcessed) {                                                 \n                              two.same = one                                                                  \n                              twoPrime = s(two)                                                               \n                              if (!twoPrime.sameWasProcessed) {                                               \n                                warningSameNotEvaluated(log, context, two)                                    \n                              }                                                                               \n                              two.same = undefined                                                            \n                            }                                                                                 \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"bats\",                                                                      \n                        \"word\": \"bats\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"default\": true,                                                                        \n                      \"marker\": \"is\",                                                                         \n                      \"one\": {                                                                                \n                        \"marker\": \"unknown\",                                                                  \n                        \"types\": [                                                                            \n                          \"unknown\"                                                                           \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"bats\",                                                                      \n                        \"word\": \"bats\"                                                                        \n                      },                                                                                      \n                      \"two\": {                                                                                \n                        \"marker\": \"mammel\",                                                                   \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"mammel\"                                                                            \n                        ],                                                                                    \n                        \"value\": \"mammel\",                                                                    \n                        \"word\": \"mammels\"                                                                     \n                      },                                                                                      \n                      \"word\": \"are\",                                                                          \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "is",
                0
              ],
              [
                "mammel",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "mammel",
              0
            ],
            [
              [
                "is",
                0
              ],
              [
                "mammel",
                0
              ]
            ]
          ],
          [
            [
              "is",
              0
            ],
            [
              [
                "is",
                0
              ]
            ]
          ],
          [
            [
              "is",
              1
            ],
            [
              [
                "is",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "is",
              0
            ],
            [
              "mammel",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "mammel",
            0
          ],
          [
            [
              "is",
              0
            ],
            [
              "mammel",
              0
            ]
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            [
              "is",
              0
            ]
          ]
        ],
        [
          [
            "is",
            1
          ],
          [
            [
              "is",
              1
            ]
          ]
        ]
      ],
      "times": 0.8541061878204346,
      "trace": "undefined",
      "contexts": [
        {
          "default": true,
          "marker": "is",
          "one": {
            "marker": "unknown",
            "types": [
              "unknown"
            ],
            "unknown": true,
            "value": "bats",
            "word": "bats",
            "response": true
          },
          "two": {
            "marker": "mammel",
            "number": "many",
            "types": [
              "mammel"
            ],
            "value": "mammel",
            "word": "mammels",
            "response": true
          },
          "word": "are",
          "topLevel": true
        }
      ],
      "generated": [
        "bats is mammel"
      ],
      "paraphrases": [
        "bats are mammels"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 15.1,
      "version": "6.13.10"
    },
    {
      "hierarchy": [
        [
          "theAble",
          "theAble"
        ],
        [
          "human",
          "object"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "animal",
          "object"
        ],
        [
          "human",
          "queryable"
        ],
        [
          "have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "theAble"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "mammel",
          "hierarchyAble"
        ],
        [
          "animal",
          "queryable"
        ],
        [
          "feline",
          "object"
        ],
        [
          "cat",
          "hierarchyAble"
        ],
        [
          "canine",
          "queryable"
        ],
        [
          "bat",
          "queryable"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "cat",
          "queryable"
        ],
        [
          "canBeQuestion",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "animal",
          "hierarchyAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "feline",
          "theAble"
        ],
        [
          "bird",
          "hierarchyAble"
        ],
        [
          "human",
          "hierarchyAble"
        ],
        [
          "bat",
          "theAble"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "questionMark_before_canBeQuestion_have",
          "questionMark_before_canBeQuestion_have"
        ],
        [
          "mammel",
          "object"
        ],
        [
          "dog",
          "theAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "bird",
          "queryable"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "dog",
          "object"
        ],
        [
          "canine",
          "theAble"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "bird",
          "object"
        ],
        [
          "dog",
          "queryable"
        ],
        [
          "bat",
          "hierarchyAble"
        ],
        [
          "human",
          "theAble"
        ],
        [
          "bird",
          "theAble"
        ],
        [
          "canine",
          "hierarchyAble"
        ],
        [
          "mammel",
          "queryable"
        ],
        [
          "animal",
          "theAble"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "dog",
          "hierarchyAble"
        ],
        [
          "cat",
          "object"
        ],
        [
          "cat",
          "theAble"
        ],
        [
          "bat",
          "object"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "canine",
          "object"
        ],
        [
          "feline",
          "queryable"
        ],
        [
          "feline",
          "hierarchyAble"
        ],
        [
          "it",
          "queryable"
        ]
      ],
      "load_cache_time": 8.494746208190918,
      "logs": [
        "Undefined word 'wings'",
        "Op choices were: [(('unknown', 0), [('bat', 0), ('have', 0), ('unknown', 0)]), (('bat', 0), [('bat', 0), ('have', 0)]), (('have', 0), [('have', 0)]), (('have', 1), [('have', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['bat', 0], ['have', 0], ['unknown', 0]]\n  Context for choosing the operator bat/0 was [['bat', 0], ['have', 0]]\n  Context for choosing the operator have/0 was [['have', 0]]\n  Context for choosing the operator have/1 was [['have', 1]]",
        "",
        "Generator           KM 'dialogues' ordinal: 22                                                                \n          APPLIED   Generator(() => true, ({context}) => JSON.stringify(context))                             \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bat\",                                                                      \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bat\"                                                                               \n                        ],                                                                                    \n                        \"value\": \"bat\",                                                                       \n                        \"word\": \"bats\"                                                                        \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n          RESULT    {\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"bat\",\"number\":\"many\",\"types\":[\"bat\"],\n                    \"value\":\"bat\",\"word\":\"bats\"},\"property\":{\"marker\":\"property\",\"types\":[\"property\"],\"unknown\n                    \":true,\"value\":\"wings\",\"word\":\"wings\"},\"word\":\"have\",\"topLevel\":true,\"sameWasProcessed\":tr\n                    ue}                                                                                       \n",
        "Generator           KM 'hierarchy' ordinal: 46                                                                \n          APPLIED   Generator(({context}) => context.value == concept && context.number == number && context.p\n                    araphrase, () => word)                                                                    \n          TO        {                                                                                         \n                      \"marker\": \"bat\",                                                                        \n                      \"number\": \"many\",                                                                       \n                      \"types\": [                                                                              \n                        \"bat\"                                                                                 \n                      ],                                                                                      \n                      \"value\": \"bat\",                                                                         \n                      \"word\": \"bats\",                                                                         \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    bats                                                                                      \n",
        "Generator           KM 'dialogues' ordinal: 19                                                                \n          APPLIED   Generator(({context}) => context.paraphrase && context.word, ({context}) => `${context.wor\n                    d}`)                                                                                      \n          TO        {                                                                                         \n                      \"marker\": \"property\",                                                                   \n                      \"types\": [                                                                              \n                        \"property\"                                                                            \n                      ],                                                                                      \n                      \"unknown\": true,                                                                        \n                      \"value\": \"wings\",                                                                       \n                      \"word\": \"wings\",                                                                        \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    wings                                                                                     \n",
        "Generator           KM 'properties' ordinal: 2                                                                \n          APPLIED   Generator(({context, hierarchy}) => hierarchy.isA(context.marker, 'have') && context.parap\n                    hrase && !context.query, ({context, g}) => {                                              \n                            return `${g(context.object)} ${context.word} ${g(context.property)}`              \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bat\",                                                                      \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bat\"                                                                               \n                        ],                                                                                    \n                        \"value\": \"bat\",                                                                       \n                        \"word\": \"bats\"                                                                        \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true,                                                               \n                      \"paraphrase\": true,                                                                     \n                      \"response\": false                                                                       \n                    }                                                                                         \n          RESULT    bats have wings                                                                           \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlStart\",                                                               \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n",
        "Semantic            KM 'properties' ordinal: 0                                                                \n          APPLIED   Semantic(({context}) => context.marker == 'have' && !context.query, ({context, objects, ap\n                    i}) => {                                                                                  \n                            if (context.negation) {                                                           \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, false)                                                        \n                            } else {                                                                          \n                              api.setProperty(pluralize.singular(context.object.value), pluralize.singular(con\n                    text.property.value), null, true)                                                         \n                            }                                                                                 \n                            context.sameWasProcessed = true                                                   \n                          })                                                                                  \n          TO        {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bat\",                                                                      \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bat\"                                                                               \n                        ],                                                                                    \n                        \"value\": \"bat\",                                                                       \n                        \"word\": \"bats\"                                                                        \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n          RESULT    {                                                                                         \n                      \"doesable\": true,                                                                       \n                      \"marker\": \"have\",                                                                       \n                      \"object\": {                                                                             \n                        \"marker\": \"bat\",                                                                      \n                        \"number\": \"many\",                                                                     \n                        \"types\": [                                                                            \n                          \"bat\"                                                                               \n                        ],                                                                                    \n                        \"value\": \"bat\",                                                                       \n                        \"word\": \"bats\"                                                                        \n                      },                                                                                      \n                      \"property\": {                                                                           \n                        \"marker\": \"property\",                                                                 \n                        \"types\": [                                                                            \n                          \"property\"                                                                          \n                        ],                                                                                    \n                        \"unknown\": true,                                                                      \n                        \"value\": \"wings\",                                                                     \n                        \"word\": \"wings\"                                                                       \n                      },                                                                                      \n                      \"word\": \"have\",                                                                         \n                      \"topLevel\": true,                                                                       \n                      \"sameWasProcessed\": true                                                                \n                    }                                                                                         \n",
        "Semantic            No semantic applied                                                                       \n          TO        {                                                                                         \n                      \"marker\": \"controlEnd\",                                                                 \n                      \"controlRemove\": true,                                                                  \n                      \"topLevel\": true                                                                        \n                    }                                                                                         \n"
      ],
      "metadata": {
        "associations": [],
        "priorities": [
          [
            [
              "unknown",
              0
            ],
            [
              [
                "bat",
                0
              ],
              [
                "have",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          ],
          [
            [
              "bat",
              0
            ],
            [
              [
                "bat",
                0
              ],
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              0
            ],
            [
              [
                "have",
                0
              ]
            ]
          ],
          [
            [
              "have",
              1
            ],
            [
              [
                "have",
                1
              ]
            ]
          ]
        ]
      },
      "op_choices": [
        [
          [
            "unknown",
            0
          ],
          [
            [
              "bat",
              0
            ],
            [
              "have",
              0
            ],
            [
              "unknown",
              0
            ]
          ]
        ],
        [
          [
            "bat",
            0
          ],
          [
            [
              "bat",
              0
            ],
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            0
          ],
          [
            [
              "have",
              0
            ]
          ]
        ],
        [
          [
            "have",
            1
          ],
          [
            [
              "have",
              1
            ]
          ]
        ]
      ],
      "times": 0.9097895622253418,
      "trace": "undefined",
      "contexts": [
        {
          "doesable": true,
          "marker": "have",
          "object": {
            "marker": "bat",
            "number": "many",
            "types": [
              "bat"
            ],
            "value": "bat",
            "word": "bats"
          },
          "property": {
            "marker": "property",
            "types": [
              "property"
            ],
            "unknown": true,
            "value": "wings",
            "word": "wings"
          },
          "word": "have",
          "topLevel": true,
          "sameWasProcessed": true
        }
      ],
      "generated": [
        "{\"doesable\":true,\"marker\":\"have\",\"object\":{\"marker\":\"bat\",\"number\":\"many\",\"types\":[\"bat\"],\"value\":\"bat\",\"word\":\"bats\"},\"property\":{\"marker\":\"property\",\"types\":[\"property\"],\"unknown\":true,\"value\":\"wings\",\"word\":\"wings\"},\"word\":\"have\",\"topLevel\":true,\"sameWasProcessed\":true}"
      ],
      "paraphrases": [
        "bats have wings"
      ],
      "responses": [
        ""
      ],
      "memory_free_percent": 15.6,
      "version": "6.13.10"
    }
  ]
}