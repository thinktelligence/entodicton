{
  "queries": [],
  "resultss": [],
  "fragments": [
    {
      "hierarchy": [
        [
          "a",
          "articlePOS"
        ],
        [
          "articlePOS",
          "articlePOS"
        ],
        [
          "canBeQuestion",
          "canBeQuestion"
        ],
        [
          "cancel",
          "verby"
        ],
        [
          "direction",
          "direction"
        ],
        [
          "down",
          "direction"
        ],
        [
          "ifAble",
          "ifAble"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "isEd",
          "isEd"
        ],
        [
          "it",
          "pronoun"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "it",
          "thisitthat"
        ],
        [
          "it",
          "toAble"
        ],
        [
          "left",
          "direction"
        ],
        [
          "minus",
          "number"
        ],
        [
          "minus",
          "queryable"
        ],
        [
          "move",
          "verby"
        ],
        [
          "moveAmount",
          "preposition"
        ],
        [
          "notAble",
          "notAble"
        ],
        [
          "number",
          "queryable"
        ],
        [
          "orAble",
          "ifAble"
        ],
        [
          "plus",
          "number"
        ],
        [
          "plus",
          "queryable"
        ],
        [
          "preposition",
          "preposition"
        ],
        [
          "pronoun",
          "pronoun"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "questionMark",
          "isEd"
        ],
        [
          "right",
          "direction"
        ],
        [
          "select",
          "verby"
        ],
        [
          "that",
          "thisitthat"
        ],
        [
          "the",
          "articlePOS"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "this",
          "pronoun"
        ],
        [
          "this",
          "queryable"
        ],
        [
          "this",
          "thisitthat"
        ],
        [
          "thisitthat",
          "queryable"
        ],
        [
          "times",
          "number"
        ],
        [
          "times",
          "queryable"
        ],
        [
          "toAble",
          "toAble"
        ],
        [
          "unknown",
          "notAble"
        ],
        [
          "unknown",
          "number"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "up",
          "direction"
        ],
        [
          "verby",
          "verby"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "whatAble",
          "queryable"
        ]
      ],
      "logs": [
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(moveAmount/0, None, evaluator(Bridge('{ ...before[0], postModifiers: ['steps'], steps: after[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('number')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(move/0, None, evaluator(Bridge('{ ...next(operator), direction: after[0] }')), variables({}) bridge(bridge)), range: {'start': 0, 'end': 3}, text: move, value: move, word: move})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(moveAmount/0, None, evaluator(Bridge('{ ...before[0], postModifiers: ['steps'], steps: after[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('number')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(direction/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), range: {'start': 5, 'end': 13}, text: direction, value: direction, word: direction})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(moveAmount/0, None, evaluator(Bridge('{ ...before[0], postModifiers: ['steps'], steps: after[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('number')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(direction/1, None, evaluator(None), variables({}) bridge(bridge)), range: {'start': 5, 'end': 13}, text: direction, value: direction, word: direction})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(moveAmount/0, None, evaluator(Bridge('{ ...before[0], postModifiers: ['steps'], steps: after[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('number')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, direction: Context({default: True, marker: Operator(direction/1, None, evaluator(None), variables({}) bridge(bridge)), range: {'start': 5, 'end': 13}, text: direction, types: ['direction'], value: direction, word: direction}), marker: Operator(move/1, None, evaluator(None), variables({}) bridge(bridge)), range: {'start': 0, 'end': 13}, text: move direction, value: move, word: move})\n\n\n",
        "Op choices were: [(('direction', 0), [('direction', 0), ('move', 0)]), (('move', 0), [('move', 0)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator direction/0 was [['direction', 0], ['move', 0]]\n  Context for choosing the operator move/0 was [['move', 0]]",
        ""
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "direction",
              0
            ],
            "ops": [
              [
                "direction",
                0
              ],
              [
                "move",
                0
              ]
            ]
          },
          {
            "op": [
              "move",
              0
            ],
            "ops": [
              [
                "move",
                0
              ]
            ]
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "marker": "move",
          "value": "move",
          "default": true,
          "text": "move direction",
          "word": "move",
          "range": {
            "start": 0,
            "end": 13
          },
          "direction": {
            "marker": "direction",
            "value": "direction",
            "default": true,
            "text": "direction",
            "word": "direction",
            "range": {
              "start": 5,
              "end": 13
            },
            "types": [
              "direction"
            ]
          },
          "topLevel": true,
          "touchedBy": [
            "call2"
          ]
        }
      ],
      "generated": [
        "move"
      ],
      "paraphrases": [
        "move direction"
      ],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "direction",
            0
          ],
          [
            "move",
            0
          ]
        ]
      ],
      "version": "7.5.0-beta.5",
      "query": "move direction",
      "key": {
        "query": "move direction"
      }
    }
  ],
  "semantics": [],
  "associations": [
    [
      [
        "direction",
        0
      ],
      [
        "move",
        0
      ]
    ]
  ]
}