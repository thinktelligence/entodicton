{
  "queries": [
    "a pistol is a weapon",
    "a rifle is a weapon",
    "a weapon is equipable"
  ],
  "resultss": [
    {
      "hierarchy": [
        [
          "a",
          "articlePOS"
        ],
        [
          "articlePOS",
          "articlePOS"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "canBeQuestion"
        ],
        [
          "concept",
          "queryable"
        ],
        [
          "concept",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "ifAble",
          "ifAble"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "isEd",
          "isEd"
        ],
        [
          "it",
          "pronoun"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "it",
          "thisitthat"
        ],
        [
          "it",
          "toAble"
        ],
        [
          "notAble",
          "notAble"
        ],
        [
          "number",
          "queryable"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "orAble",
          "ifAble"
        ],
        [
          "pronoun",
          "pronoun"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "questionMark",
          "isEd"
        ],
        [
          "readonly",
          "queryable"
        ],
        [
          "that",
          "thisitthat"
        ],
        [
          "the",
          "articlePOS"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "this",
          "pronoun"
        ],
        [
          "this",
          "queryable"
        ],
        [
          "this",
          "thisitthat"
        ],
        [
          "thisitthat",
          "queryable"
        ],
        [
          "toAble",
          "toAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "type",
          "whatAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "unknown",
          "notAble"
        ],
        [
          "unknown",
          "number"
        ],
        [
          "unknown",
          "object"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "what",
          "object"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "whatAble",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "xfx",
          "queryable"
        ]
      ],
      "logs": [
        "Undefined word 'pistol'",
        "Undefined word 'weapon'",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(a/0, PASS, None, evaluator(Bridge('{ ...after[0], pullFromContext: false, concept: true, number: 'one', wantsValue: true, determiner: 'a', modifiers: append(['determiner'], after[0].modifiers) }')), variables({}) bridge(bridge)), range: {'start': 0, 'end': 0}, text: a, word: a})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/0, None, evaluator(Bridge('{ ...next(operator), unknown: true }')), variables({}) bridge(bridge)), range: {'start': 2, 'end': 7}, text: pistol, value: pistol, word: pistol})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/0, None, evaluator(Bridge('{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }')), variables({}) bridge(bridge)), number: one, range: {'start': 9, 'end': 10}, text: is, word: is})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(a/0, PASS, None, evaluator(Bridge('{ ...after[0], pullFromContext: false, concept: true, number: 'one', wantsValue: true, determiner: 'a', modifiers: append(['determiner'], after[0].modifiers) }')), variables({}) bridge(bridge)), range: {'start': 12, 'end': 12}, text: a, word: a})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/0, None, evaluator(Bridge('{ ...next(operator), unknown: true }')), variables({}) bridge(bridge)), range: {'start': 14, 'end': 19}, text: weapon, value: weapon, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), range: {'start': 2, 'end': 7}, text: pistol, unknown: True, value: pistol, word: pistol})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), range: {'start': 14, 'end': 19}, text: weapon, unknown: True, value: weapon, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({concept: True, determiner: a, marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 7}, text: a pistol, types: ['unknown'], unknown: True, value: pistol, wantsValue: True, word: pistol})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({concept: True, determiner: a, marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 12, 'end': 19}, text: a weapon, types: ['unknown'], unknown: True, value: weapon, wantsValue: True, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), number: one, one: Context({concept: True, determiner: a, marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 19}, text: a pistol, types: ['unknown', 'unknown'], unknown: True, value: pistol, wantsValue: True, word: pistol}), range: {'start': 0, 'end': 19}, text: a pistol is a weapon, two: Context({concept: True, determiner: a, marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 12, 'end': 19}, text: a weapon, types: ['unknown', 'unknown'], unknown: True, value: weapon, wantsValue: True, word: weapon}), word: is})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/2, None, evaluator(None), variables({}) bridge(bridge)), number: one, one: Context({concept: True, determiner: a, marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 19}, text: a pistol, types: ['unknown', 'unknown'], unknown: True, value: pistol, wantsValue: True, word: pistol}), range: {'start': 0, 'end': 19}, text: a pistol is a weapon, two: Context({concept: True, determiner: a, marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 12, 'end': 19}, text: a weapon, types: ['unknown', 'unknown'], unknown: True, value: weapon, wantsValue: True, word: weapon}), word: is})\n\n\n",
        "Op choices were: [(('unknown', 0), [('a', 0), ('is', 0), ('unknown', 0)]), (('unknown', 0), [('a', 0), ('is', 0), ('unknown', 0), ('unknown', 1)]), (('a', 0), [('a', 0), ('is', 0), ('unknown', 1)]), (('a', 0), [('a', 0), ('is', 0), ('unknown', 1)]), (('is', 0), [('is', 0), ('unknown', 1)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['a', 0], ['is', 0], ['unknown', 0]]\n  Context for choosing the operator unknown/0 was [['a', 0], ['is', 0], ['unknown', 0], ['unknown', 1]]\n  Context for choosing the operator a/0 was [['a', 0], ['is', 0], ['unknown', 1]]\n  Context for choosing the operator a/0 was [['a', 0], ['is', 0], ['unknown', 1]]\n  Context for choosing the operator is/0 was [['is', 0], ['unknown', 1]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "Associations made with probabilities (each group is a choice point. if the wrong choices were made update the associations list): \n  Group 0\n    0.375 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['a', 0], ['unknown', 0]]\n      (('unknown', 1), ('isEd', 0))\n    1.0 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['a', 0], ['unknown', 0]]\n      (('unknown', 1), ('is', 0), ('a', 0), ('unknown', 1))\n  Group 1\n    1.0 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['unknown', 0]]\n      (('unknown', 1), ('is', 0), ('unknown', 1))\n    0.6666666666666666 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['unknown', 0]]\n      (('unknown', 1), ('isEd', 0))\n      (('isEd', 0), ('unknown', 1))"
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ]
            ]
          },
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "a",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "a",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "is",
              0
            ],
            "ops": [
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ]
            ]
          },
          {
            "op": [
              "is",
              1
            ],
            "ops": [
              [
                "is",
                1
              ]
            ]
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "number": "one",
          "text": "a pistol is a weapon",
          "marker": "is",
          "word": "is",
          "range": {
            "start": 0,
            "end": 19
          },
          "one": {
            "number": "one",
            "marker": "unknown",
            "range": {
              "start": 0,
              "end": 19
            },
            "word": "pistol",
            "text": "a pistol",
            "value": "pistol",
            "unknown": true,
            "types": [
              "unknown"
            ],
            "pullFromContext": false,
            "concept": true,
            "wantsValue": true,
            "determiner": "a",
            "modifiers": [
              "determiner"
            ]
          },
          "two": {
            "marker": "unknown",
            "range": {
              "start": 12,
              "end": 19
            },
            "word": "weapon",
            "text": "a weapon",
            "value": "weapon",
            "unknown": true,
            "types": [
              "unknown"
            ],
            "pullFromContext": false,
            "concept": true,
            "number": "one",
            "wantsValue": true,
            "determiner": "a",
            "modifiers": [
              "determiner"
            ]
          },
          "topLevel": true,
          "touchedBy": [
            "call2"
          ]
        }
      ],
      "generated": [
        "a pistol is weapon"
      ],
      "paraphrases": [
        "a pistol is a weapon"
      ],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ]
        ],
        [
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ]
        ]
      ],
      "version": "7.5.0-beta.30",
      "query": "a pistol is a weapon",
      "key": {
        "query": "a pistol is a weapon"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS"
        ],
        [
          "articlePOS",
          "articlePOS"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "canBeQuestion"
        ],
        [
          "concept",
          "queryable"
        ],
        [
          "concept",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "ifAble",
          "ifAble"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "isEd",
          "isEd"
        ],
        [
          "isEdee",
          "isEdee"
        ],
        [
          "isEder",
          "isEder"
        ],
        [
          "it",
          "pronoun"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "it",
          "thisitthat"
        ],
        [
          "it",
          "toAble"
        ],
        [
          "notAble",
          "notAble"
        ],
        [
          "number",
          "queryable"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "orAble",
          "ifAble"
        ],
        [
          "pistol",
          "hierarchyAble"
        ],
        [
          "pistol",
          "isEdee"
        ],
        [
          "pistol",
          "isEder"
        ],
        [
          "pistol",
          "object"
        ],
        [
          "pistol",
          "property"
        ],
        [
          "pistol",
          "queryable"
        ],
        [
          "pistol",
          "theAble"
        ],
        [
          "pistol",
          "weapon"
        ],
        [
          "pronoun",
          "pronoun"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "questionMark",
          "isEd"
        ],
        [
          "readonly",
          "queryable"
        ],
        [
          "that",
          "thisitthat"
        ],
        [
          "the",
          "articlePOS"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "this",
          "pronoun"
        ],
        [
          "this",
          "queryable"
        ],
        [
          "this",
          "thisitthat"
        ],
        [
          "thisitthat",
          "queryable"
        ],
        [
          "toAble",
          "toAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "type",
          "whatAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "unknown",
          "notAble"
        ],
        [
          "unknown",
          "number"
        ],
        [
          "unknown",
          "object"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "weapon",
          "hierarchyAble"
        ],
        [
          "weapon",
          "isEdee"
        ],
        [
          "weapon",
          "isEder"
        ],
        [
          "weapon",
          "object"
        ],
        [
          "weapon",
          "property"
        ],
        [
          "weapon",
          "queryable"
        ],
        [
          "weapon",
          "theAble"
        ],
        [
          "what",
          "object"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "whatAble",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "xfx",
          "queryable"
        ]
      ],
      "logs": [
        "Undefined word 'rifle'",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(a/0, PASS, None, evaluator(Bridge('{ ...after[0], pullFromContext: false, concept: true, number: 'one', wantsValue: true, determiner: 'a', modifiers: append(['determiner'], after[0].modifiers) }')), variables({}) bridge(bridge)), range: {'start': 0, 'end': 0}, text: a, word: a})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/0, None, evaluator(Bridge('{ ...next(operator), unknown: true }')), variables({}) bridge(bridge)), range: {'start': 2, 'end': 6}, text: rifle, value: rifle, word: rifle})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/0, None, evaluator(Bridge('{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }')), variables({}) bridge(bridge)), number: one, range: {'start': 8, 'end': 9}, text: is, word: is})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(a/0, PASS, None, evaluator(Bridge('{ ...after[0], pullFromContext: false, concept: true, number: 'one', wantsValue: true, determiner: 'a', modifiers: append(['determiner'], after[0].modifiers) }')), variables({}) bridge(bridge)), range: {'start': 11, 'end': 11}, text: a, word: a})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(weapon/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), number: one, range: {'start': 13, 'end': 18}, text: weapon, value: weapon, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), range: {'start': 2, 'end': 6}, text: rifle, unknown: True, value: rifle, word: rifle})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), range: {'start': 2, 'end': 6}, text: rifle, unknown: True, value: rifle, word: rifle})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), number: one, range: {'start': 13, 'end': 18}, text: weapon, value: weapon, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({concept: True, determiner: a, marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 6}, text: a rifle, types: ['unknown'], unknown: True, value: rifle, wantsValue: True, word: rifle})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({concept: True, determiner: a, marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 11, 'end': 18}, text: a weapon, types: ['weapon'], value: weapon, wantsValue: True, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), number: one, one: Context({concept: True, determiner: a, marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 18}, text: a rifle, types: ['unknown', 'unknown'], unknown: True, value: rifle, wantsValue: True, word: rifle}), range: {'start': 0, 'end': 18}, text: a rifle is a weapon, two: Context({concept: True, determiner: a, marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 11, 'end': 18}, text: a weapon, types: ['weapon', 'weapon'], value: weapon, wantsValue: True, word: weapon}), word: is})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/2, None, evaluator(None), variables({}) bridge(bridge)), number: one, one: Context({concept: True, determiner: a, marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 18}, text: a rifle, types: ['unknown', 'unknown'], unknown: True, value: rifle, wantsValue: True, word: rifle}), range: {'start': 0, 'end': 18}, text: a rifle is a weapon, two: Context({concept: True, determiner: a, marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 11, 'end': 18}, text: a weapon, types: ['weapon', 'weapon'], value: weapon, wantsValue: True, word: weapon}), word: is})\n\n\n",
        "Op choices were: [(('unknown', 0), [('a', 0), ('is', 0), ('unknown', 0), ('weapon', 0)]), (('unknown', 1), [('a', 0), ('is', 0), ('unknown', 1), ('weapon', 0)]), (('weapon', 0), [('a', 0), ('is', 0), ('weapon', 0)]), (('a', 0), [('a', 0), ('is', 0)]), (('a', 0), [('a', 0), ('is', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['a', 0], ['is', 0], ['unknown', 0], ['weapon', 0]]\n  Context for choosing the operator unknown/1 was [['a', 0], ['is', 0], ['unknown', 1], ['weapon', 0]]\n  Context for choosing the operator weapon/0 was [['a', 0], ['is', 0], ['weapon', 0]]\n  Context for choosing the operator a/0 was [['a', 0], ['is', 0]]\n  Context for choosing the operator a/0 was [['a', 0], ['is', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "Associations made with probabilities (each group is a choice point. if the wrong choices were made update the associations list): \n  Group 0\n    0.6666666666666666 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['a', 0]]\n      (('unknown', 1), ('isEd', 0))\n      (('isEd', 0), ('a', 0))\n    1.0 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['a', 0]]\n      (('unknown', 1), ('is', 0), ('a', 0))\n  Group 1\n    1.0 - [['unknown', 0], \">>>>1 ['is', 0] <<<<1\", ['weapon', 0]]\n      (('unknown', 1), ('is', 0), ('weapon', 0))\n    0.6666666666666666 - [['unknown', 0], \">>>>1 ['isEd', 0] <<<<1\", ['weapon', 0]]\n      (('unknown', 1), ('isEd', 0))\n      (('isEd', 0), ('weapon', 0))"
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "weapon",
                0
              ]
            ]
          },
          {
            "op": [
              "unknown",
              1
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "weapon",
                0
              ]
            ]
          },
          {
            "op": [
              "weapon",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "weapon",
                0
              ]
            ]
          },
          {
            "op": [
              "a",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ]
            ]
          },
          {
            "op": [
              "a",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ]
            ]
          },
          {
            "op": [
              "is",
              0
            ],
            "ops": [
              [
                "is",
                0
              ]
            ]
          },
          {
            "op": [
              "is",
              1
            ],
            "ops": [
              [
                "is",
                1
              ]
            ]
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "number": "one",
          "text": "a rifle is a weapon",
          "marker": "is",
          "word": "is",
          "range": {
            "start": 0,
            "end": 18
          },
          "one": {
            "number": "one",
            "marker": "unknown",
            "range": {
              "start": 0,
              "end": 18
            },
            "word": "rifle",
            "text": "a rifle",
            "value": "rifle",
            "unknown": true,
            "types": [
              "unknown"
            ],
            "pullFromContext": false,
            "concept": true,
            "wantsValue": true,
            "determiner": "a",
            "modifiers": [
              "determiner"
            ]
          },
          "two": {
            "value": "weapon",
            "number": "one",
            "text": "a weapon",
            "marker": "weapon",
            "word": "weapon",
            "range": {
              "start": 11,
              "end": 18
            },
            "types": [
              "weapon"
            ],
            "pullFromContext": false,
            "concept": true,
            "wantsValue": true,
            "determiner": "a",
            "modifiers": [
              "determiner"
            ]
          },
          "topLevel": true,
          "touchedBy": [
            "call2"
          ]
        }
      ],
      "generated": [
        "a rifle is weapon"
      ],
      "paraphrases": [
        "a rifle is a weapon"
      ],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "weapon",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "weapon",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "weapon",
            0
          ]
        ]
      ],
      "version": "7.5.0-beta.30",
      "query": "a rifle is a weapon",
      "key": {
        "query": "a rifle is a weapon"
      }
    },
    {
      "hierarchy": [
        [
          "a",
          "articlePOS"
        ],
        [
          "articlePOS",
          "articlePOS"
        ],
        [
          "canBeDoQuestion",
          "canBeDoQuestion"
        ],
        [
          "canBeQuestion",
          "canBeQuestion"
        ],
        [
          "concept",
          "queryable"
        ],
        [
          "concept",
          "theAble"
        ],
        [
          "have",
          "canBeDoQuestion"
        ],
        [
          "have",
          "canBeQuestion"
        ],
        [
          "hierarchyAble",
          "queryable"
        ],
        [
          "ifAble",
          "ifAble"
        ],
        [
          "is",
          "canBeQuestion"
        ],
        [
          "isEd",
          "isEd"
        ],
        [
          "isEdee",
          "isEdee"
        ],
        [
          "isEder",
          "isEder"
        ],
        [
          "it",
          "pronoun"
        ],
        [
          "it",
          "queryable"
        ],
        [
          "it",
          "thisitthat"
        ],
        [
          "it",
          "toAble"
        ],
        [
          "notAble",
          "notAble"
        ],
        [
          "number",
          "queryable"
        ],
        [
          "object",
          "queryable"
        ],
        [
          "object",
          "theAble"
        ],
        [
          "orAble",
          "ifAble"
        ],
        [
          "pistol",
          "hierarchyAble"
        ],
        [
          "pistol",
          "isEdee"
        ],
        [
          "pistol",
          "isEder"
        ],
        [
          "pistol",
          "object"
        ],
        [
          "pistol",
          "property"
        ],
        [
          "pistol",
          "queryable"
        ],
        [
          "pistol",
          "theAble"
        ],
        [
          "pistol",
          "weapon"
        ],
        [
          "pronoun",
          "pronoun"
        ],
        [
          "property",
          "queryable"
        ],
        [
          "property",
          "theAble"
        ],
        [
          "property",
          "unknown"
        ],
        [
          "queryable",
          "queryable"
        ],
        [
          "questionMark",
          "isEd"
        ],
        [
          "readonly",
          "queryable"
        ],
        [
          "rifle",
          "hierarchyAble"
        ],
        [
          "rifle",
          "isEdee"
        ],
        [
          "rifle",
          "isEder"
        ],
        [
          "rifle",
          "object"
        ],
        [
          "rifle",
          "property"
        ],
        [
          "rifle",
          "queryable"
        ],
        [
          "rifle",
          "theAble"
        ],
        [
          "rifle",
          "weapon"
        ],
        [
          "that",
          "thisitthat"
        ],
        [
          "the",
          "articlePOS"
        ],
        [
          "theAble",
          "theAble"
        ],
        [
          "this",
          "pronoun"
        ],
        [
          "this",
          "queryable"
        ],
        [
          "this",
          "thisitthat"
        ],
        [
          "thisitthat",
          "queryable"
        ],
        [
          "toAble",
          "toAble"
        ],
        [
          "type",
          "property"
        ],
        [
          "type",
          "whatAble"
        ],
        [
          "unknown",
          "hierarchyAble"
        ],
        [
          "unknown",
          "notAble"
        ],
        [
          "unknown",
          "number"
        ],
        [
          "unknown",
          "object"
        ],
        [
          "unknown",
          "queryable"
        ],
        [
          "unknown",
          "theAble"
        ],
        [
          "weapon",
          "hierarchyAble"
        ],
        [
          "weapon",
          "isEdee"
        ],
        [
          "weapon",
          "isEder"
        ],
        [
          "weapon",
          "object"
        ],
        [
          "weapon",
          "property"
        ],
        [
          "weapon",
          "queryable"
        ],
        [
          "weapon",
          "theAble"
        ],
        [
          "what",
          "object"
        ],
        [
          "what",
          "queryable"
        ],
        [
          "whatAble",
          "queryable"
        ],
        [
          "whose",
          "object"
        ],
        [
          "xfx",
          "queryable"
        ]
      ],
      "logs": [
        "Undefined word 'equipable'",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({default: True, marker: Operator(a/0, PASS, None, evaluator(Bridge('{ ...after[0], pullFromContext: false, concept: true, number: 'one', wantsValue: true, determiner: 'a', modifiers: append(['determiner'], after[0].modifiers) }')), variables({}) bridge(bridge)), range: {'start': 0, 'end': 0}, text: a, word: a})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(weapon/0, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), number: one, range: {'start': 2, 'end': 7}, text: weapon, value: weapon, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/0, None, evaluator(Bridge('{ ...next(operator), one: { number: operator.number, ...before[0] }, two: after[0] }')), variables({}) bridge(bridge)), number: one, range: {'start': 9, 'end': 10}, text: is, word: is})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/0, None, evaluator(Bridge('{ ...next(operator), unknown: true }')), variables({}) bridge(bridge)), range: {'start': 12, 'end': 20}, text: equipable, value: equipable, word: equipable})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), range: {'start': 12, 'end': 20}, text: equipable, unknown: True, value: equipable, word: equipable})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), range: {'start': 12, 'end': 20}, text: equipable, unknown: True, value: equipable, word: equipable})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), number: one, range: {'start': 2, 'end': 7}, text: weapon, value: weapon, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({concept: True, determiner: a, marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 7}, text: a weapon, types: ['weapon'], value: weapon, wantsValue: True, word: weapon})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/1, None, evaluator(Bridge('{ ...next(operator) }')), variables({}) bridge(bridge)), number: one, one: Context({concept: True, determiner: a, marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 20}, text: a weapon, types: ['weapon', 'weapon'], value: weapon, wantsValue: True, word: weapon}), range: {'start': 0, 'end': 20}, text: a weapon is equipable, two: Context({marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), range: {'start': 12, 'end': 20}, text: equipable, types: ['unknown'], unknown: True, value: equipable, word: equipable}), word: is})\n\n\n",
        "Applying implicit\n\t\t\t\t\t\t\t\tOperator(counting/0, None, evaluator(Bridge('{ ...after, quantity: before[0] }')), variables({}), implicit bridge(bridge))\n\t\t\t\tfailed due to the expected type\n\n\t\t\t\t\t\t\t\tType('countable')\n\n\t\t\t\tnot matching the found type\n\n\t\t\t\t\t\t\t\tContext({marker: Operator(is/2, None, evaluator(None), variables({}) bridge(bridge)), number: one, one: Context({concept: True, determiner: a, marker: Operator(weapon/1, None, evaluator(None), variables({}) bridge(bridge)), modifiers: ['determiner'], number: one, pullFromContext: False, range: {'start': 0, 'end': 20}, text: a weapon, types: ['weapon', 'weapon'], value: weapon, wantsValue: True, word: weapon}), range: {'start': 0, 'end': 20}, text: a weapon is equipable, two: Context({marker: Operator(unknown/2, None, evaluator(None), variables({}) bridge(bridge)), range: {'start': 12, 'end': 20}, text: equipable, types: ['unknown'], unknown: True, value: equipable, word: equipable}), word: is})\n\n\n",
        "Op choices were: [(('unknown', 0), [('a', 0), ('is', 0), ('unknown', 0), ('weapon', 0)]), (('unknown', 1), [('a', 0), ('is', 0), ('unknown', 1), ('weapon', 0)]), (('weapon', 0), [('a', 0), ('is', 0), ('weapon', 0)]), (('a', 0), [('a', 0), ('is', 0)]), (('is', 0), [('is', 0)]), (('is', 1), [('is', 1)])]",
        "Contexts used for choosing operators (if the wrong choices were made update the priories array. Put the expected choice at the end of the list): \n  Context for choosing the operator unknown/0 was [['a', 0], ['is', 0], ['unknown', 0], ['weapon', 0]]\n  Context for choosing the operator unknown/1 was [['a', 0], ['is', 0], ['unknown', 1], ['weapon', 0]]\n  Context for choosing the operator weapon/0 was [['a', 0], ['is', 0], ['weapon', 0]]\n  Context for choosing the operator a/0 was [['a', 0], ['is', 0]]\n  Context for choosing the operator is/0 was [['is', 0]]\n  Context for choosing the operator is/1 was [['is', 1]]",
        "Associations made with probabilities (each group is a choice point. if the wrong choices were made update the associations list): \n  Group 0\n    0.5 - [['weapon', 0], \">>>>1 ['isEd', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('isEd', 0))\n    1.0 - [['weapon', 0], \">>>>1 ['is', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('is', 0), ('unknown', 0))\n  Group 1\n    0.6666666666666666 - [['weapon', 0], \">>>>1 ['isEd', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('isEd', 0))\n      (('isEd', 0), ('unknown', 1))\n    1.0 - [['weapon', 0], \">>>>1 ['is', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('is', 0), ('unknown', 1))\n  Group 2\n    0.6666666666666666 - [['weapon', 0], \">>>>1 ['isEd', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('isEd', 0))\n      (('isEd', 0), ('unknown', 1))\n    1.0 - [['weapon', 0], \">>>>1 ['is', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('is', 0), ('unknown', 1))\n  Group 3\n    0.6666666666666666 - [['weapon', 0], \">>>>1 ['isEd', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('isEd', 0))\n      (('isEd', 0), ('unknown', 1))\n    1.0 - [['weapon', 0], \">>>>1 ['is', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('is', 0), ('unknown', 1))\n  Group 4\n    0.6666666666666666 - [['weapon', 0], \">>>>1 ['isEd', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('isEd', 0))\n      (('isEd', 0), ('unknown', 1))\n    1.0 - [['weapon', 0], \">>>>1 ['is', 0] <<<<1\", ['unknown', 0]]\n      (('weapon', 0), ('is', 0), ('unknown', 1))"
      ],
      "metadata": {
        "opChoices": [
          {
            "op": [
              "unknown",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                0
              ],
              [
                "weapon",
                0
              ]
            ]
          },
          {
            "op": [
              "unknown",
              1
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "unknown",
                1
              ],
              [
                "weapon",
                0
              ]
            ]
          },
          {
            "op": [
              "weapon",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ],
              [
                "weapon",
                0
              ]
            ]
          },
          {
            "op": [
              "a",
              0
            ],
            "ops": [
              [
                "a",
                0
              ],
              [
                "is",
                0
              ]
            ]
          },
          {
            "op": [
              "is",
              0
            ],
            "ops": [
              [
                "is",
                0
              ]
            ]
          },
          {
            "op": [
              "is",
              1
            ],
            "ops": [
              [
                "is",
                1
              ]
            ]
          }
        ]
      },
      "trace": "undefined",
      "contexts": [
        {
          "number": "one",
          "text": "a weapon is equipable",
          "marker": "is",
          "word": "is",
          "range": {
            "start": 0,
            "end": 20
          },
          "one": {
            "number": "one",
            "value": "weapon",
            "text": "a weapon",
            "marker": "weapon",
            "word": "weapon",
            "range": {
              "start": 0,
              "end": 20
            },
            "types": [
              "weapon"
            ],
            "pullFromContext": false,
            "concept": true,
            "wantsValue": true,
            "determiner": "a",
            "modifiers": [
              "determiner"
            ]
          },
          "two": {
            "marker": "unknown",
            "range": {
              "start": 12,
              "end": 20
            },
            "word": "equipable",
            "text": "equipable",
            "value": "equipable",
            "unknown": true,
            "types": [
              "unknown"
            ],
            "concept": true
          },
          "topLevel": true,
          "touchedBy": [
            "call2"
          ]
        }
      ],
      "generated": [
        "a weapon is equipable"
      ],
      "paraphrases": [
        "a weapon is equipable"
      ],
      "responses": [
        ""
      ],
      "associations": [
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            0
          ],
          [
            "weapon",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "unknown",
            1
          ],
          [
            "weapon",
            0
          ]
        ],
        [
          [
            "a",
            0
          ],
          [
            "is",
            0
          ],
          [
            "weapon",
            0
          ]
        ]
      ],
      "version": "7.5.0-beta.30",
      "query": "a weapon is equipable",
      "key": {
        "query": "a weapon is equipable"
      }
    }
  ],
  "fragments": [],
  "semantics": [],
  "associations": [
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "weapon",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        0
      ],
      [
        "weapon",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "weapon",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ],
      [
        "weapon",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "weapon",
        0
      ]
    ],
    [
      [
        "a",
        0
      ],
      [
        "is",
        0
      ],
      [
        "weapon",
        0
      ]
    ],
    [
      [
        "is",
        0
      ],
      [
        "unknown",
        1
      ]
    ]
  ]
}